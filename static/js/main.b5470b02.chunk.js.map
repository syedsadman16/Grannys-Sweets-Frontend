{"version":3,"sources":["pages/vip-confetti.webp","components/ReservationForm.js","pages/Menu/MenuItemModal.jsx","pages/Menu/index.jsx","pages/VipMenu.js","pages/Chefs/Chefs.jsx","utils/jwt.js","redux/actions/user.js","components/LoginForm/index.js","pages/Signin.jsx","components/SignupForm/index.js","pages/Signup.jsx","pages/Home/index.jsx","pages/Discussions.js","pages/Comments.js","pages/Balance.js","pages/Users.js","pages/Employee/ManagerDashboard.js","components/Info.js","components/UserWarningCount.js","pages/Employee/ChefDashboard.js","pages/Employee/DelivererDashboard.js","pages/Employee/Home.js","pages/Employee/Jobs.js","pages/Employee/InProgress.js","pages/Employee/DishForm.js","pages/Employee/ChefJob.js","pages/Employee/DelivererRateCustomer.js","layouts/AuthUser/NavBar/NavItem.js","layouts/AuthUser/NavBar/SideBar.js","layouts/AuthUser/NavBar/TopBar.js","layouts/AuthUser/theme/index.js","layouts/AuthUser/theme/shadows.js","layouts/AuthUser/theme/typography.js","layouts/AuthUser/GlobalStyles.js","layouts/AuthUser/index.js","layouts/User/NavBar.js","layouts/User/index.js","pages/Closed.js","pages/Unverified.js","layouts/index.js","auth.js","pages/Customer.js","pages/Taboo.js","pages/Complaints.js","pages/Reviews.js","pages/ManagerOrders.js","pages/CustomerOrders.js","pages/Customer/CustomerInfo.js","pages/Reservations.js","Routes.js","App.jsx","serviceWorker.js","redux/reducers/user.js","redux/reducers/index.js","redux/store.js","config.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","DateAndTimePickers","shouldShow","handleChange","table","timeTo","timeFrom","useState","tables","setTables","console","log","fetchData","a","api","get","Date","toISOString","data","tableNames","map","name","useEffect","classes","className","noValidate","Form","Group","Label","Control","as","onChange","e","target","value","TextField","id","label","type","defaultValue","InputLabelProps","shrink","join","colors","MenuItemModal","state","quantity","message","orderSuccess","openCommentSection","comments","handleQuantityChange","event","setState","currentTarget","handleShowComments","prevState","fetchDishRatings","props","modalData","dishId","res","changeObj","prev","makeOrder","reservation","timeSlot","from","to","parseInt","post","dishes","isEmpty","response","this","user","Modal","size","Header","closeButton","Title","Body","Button","variant","role","closed","verified","dishTitle","Footer","onClick","onHide","onError","src","dishImage","height","alt","dishDescription","Rating","dishRating","readOnly","precision","keywords","el","i","disabled","style","backgroundColor","borderColor","defaultChecked","Collapse","in","marginTop","marginBottom","ListItem","button","ListItemAvatar","ListItemText","primary","critic","rating","React","Component","Menu","topThree","isLoading","searchText","modalShow","dishPrice","orderItemQuantity","orderItemId","handleSearchTextChange","bind","handleModalClose","axios","then","element","sort","b","averageRating","newData","description","price","isSpecial","special","imageUrl","dishChef","chef","keyWord","word","toLowerCase","icon","faUtensils","color","inline","placeholder","Grid","direction","justify","alignItems","slice","item","key","Divider","username","length","substring","show","filter","p","some","s","indexOf","VipMenu","imgMyimageexample","require","backgroundImage","backgroundSize","Chefs","randomDesc","json","setJwtHeader","token","defaults","headers","common","setUser","payload","login","formData","history","dispatch","localStorage","setItem","authorization","push","go","getUser","logout","removeItem","LoginForm","setUsername","password","setPassword","error","setError","useDispatch","useHistory","handleLogin","preventDefault","onSubmit","autoFocus","required","block","Signin","SignupForm","address","setAddress","setName","userType","setUserType","handleUserTypeChange","handleRegisterAccount","body","Check","Signup","Home","setData","loadData","cssModule","home","data-src","position","padding","background","textAlign","top","left","transform","textTransform","fontFamily","fontWeight","fontSize","root","minWidth","bullet","margin","title","pos","Discussions","discussions","setDiscussions","setMessage","topic","setTopic","useSelector","createTopic","includes","index","textDecoration","Card","maxWidth","CardContent","Typography","component","gutterBottom","creator","Text","muted","Comments","setComments","location","useLocation","pathname","split","splice","errorMessage","comment","setComment","discussion","setDiscussion","createComment","commenter","orientation","flexItem","Balance","balance","setBalance","transactions","setTransactions","amount","setAmount","depositMoney","userid","toFixed","min","step","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","scope","TabPanel","children","other","hidden","aria-labelledby","Container","Box","Users","allUsers","setAllUsers","closedUsers","setClosedUsers","unverifiedUsers","setUnverifiedUsers","setEmployeeUsers","setValue","salary","setSalaries","fetchUsers","getSalaries","salaries","verifyUser","patch","openUserAccount","delete","handleDemotion","currentSalary","put","handlePromotion","handleFire","Tabs","centered","newValue","Tab","ManagerDashboard","avatar","indigo","Info","rest","Icon","clsx","Avatar","Warning","warning","catch","WarningIcon","ChefDashboard","avgRating","setAvgRating","fetchChefAverageRating","flexDirection","info","alignSelf","parseFloat","toPrecision","DelivererDashboard","palette","dark","minHeight","paddingBottom","paddingTop","Dashboard","Jobs","jobs","setJobs","testing","url","jobsapi","gridContainer","paddingLeft","paddingRight","media","allignItems","job","status","order","CardActionArea","date","customer","CardActions","orderId","E","acceptJobEvent","InProgress","deliveryPerson","cancelJob","completedJob","DishForm","setDescription","setImageUrl","setSpecial","setKeyWord","allkeyWord","setAllKeyWord","currWord","setcurrKeyWord","setPrice","open","setOpen","Alert","elevation","handleKeyword","persist","handleSubmission","dish","handleClose","reason","class","htmlFor","Snackbar","autoHideDuration","onClose","severity","ChefJob","chefJob","setChefJob","CancelToken","source","cancelToken","jobId","jobStatus","completed","orderTime","customerName","dishOrders","dishName","isCancel","cancel","handleComplete","CardMedia","image","DelivererRateCustomer","allDelivererJobs","setAllDelivererJobs","userComment","setUserComment","userRating","setUserRating","fetchAllDelivererJobs","handleUserCommentChange","handleRateCustomer","person","userRated","text","secondary","typography","fontWeightMedium","justifyContent","letterSpacing","active","main","NavItem","href","disableGutters","activeClassName","RouterLink","mobileDrawer","desktopDrawer","cursor","NavBar","onMobileClose","openMobile","ShowStatus","Status","customerSidebar","List","DollarSignIcon","ListIcon","UserIcon","CheckCircleIcon","delivererSidebar","Briefcase","TruckIcon","StarIcon","chefSidebar","coffee","managerSidebar","UsersIcon","XCircleIcon","ClipboardIcon","customerAvatar","employeeAvatar","content","flexGrow","Hidden","lgUp","Drawer","anchor","paper","mdDown","defaultProps","TopBar","onMobileNavOpen","notifications","handleLogout","AppBar","Toolbar","faCookieBite","IconButton","Badge","badgeContent","createMuiTheme","default","white","blueGrey","shadows","h1","h2","h3","h4","h5","h6","overline","createStyles","boxSizing","html","GlobalStyles","overflow","wrapper","flex","breakpoints","up","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","ThemeProvider","SideBar","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Nav","NavDropdown","faUserAlt","alignRight","Item","Link","faBriefcase","CustomerLayout","Closed","Unverified","Layout","page","isPrivate","Page","OriginalComponent","ComposedComponent","checkAuth","getItem","startsWith","mapStateToProps","mapDispatchToProps","connect","authPage","AuthUser","User","Customer","ratingList","Taboo","newTabooWord","setnewTabooWord","tabooWords","setTabooWords","getTabooWords","taboowords","addNewTabooWord","removeWord","wordid","controlId","Complaints","complaints","setComplaints","denyMesg","setDenyMesg","fetchComplaints","allClaims","approveClaim","claimId","victim","denyComplaint","Reviews","reviews","setReviews","getReviews","handleSubmitClaim","ManagerOrders","allOrders","setAllOrders","fetchAllOrders","orders","CustomerOrders","setDishRating","dishComment","setDishComment","markOrderCompleted","handleDishRatingSubmit","handleCommentChange","handleUserRatingSubmit","delivererRated","dishRated","CustomerInfo","setInfo","rand","modalStyle","window","reload","Math","round","random","userinfo","loadUserInfo","border","boxShadow","deleteAccount","card_class","useStylesCard","CardHeader","Reservations","reservationsList","setReservationsList","fetchReservations","reservs","Routes","userRole","exact","path","render","UserWarningCount","VIPMenu","TrackJob","Boolean","hostname","match","initialState","userReducer","action","reducers","combineReducers","middleware","thunkMiddleware","promiseMiddleware","middlewareEnhancer","applyMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","jwt","baseURL","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b5470b02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vip-confetti.651921f0.webp\";","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport api from \"axios\";\nimport { isNumeric } from \"lodash\";\nimport { Form } from \"react-bootstrap\";\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nexport default function DateAndTimePickers({\n  shouldShow = false,\n  handleChange,\n  table,\n  timeTo,\n  timeFrom,\n}) {\n  const [tables, setTables] = useState([]);\n  console.log(table, timeTo, timeFrom);\n\n  const fetchData = async () => {\n    try {\n      let { data } = await api.get(\n        `/tables?from=${new Date(timeFrom).toISOString()}&to=${new Date(\n          timeTo\n        ).toISOString()}`\n      );\n      const tableNames = data.map((table) => table.name);\n      setTables(tableNames);\n    } catch (e) {}\n  };\n\n  useEffect(() => {\n    if (table && timeTo && timeFrom) {\n      fetchData();\n    }\n  }, [table, timeTo, timeFrom]);\n  const classes = useStyles();\n\n  return (\n    shouldShow && (\n      <>\n        <form className={classes.container} noValidate>\n          <Form.Group>\n            <Form.Label>Select a Table</Form.Label>\n            <Form.Control\n              as=\"select\"\n              onChange={(e) => handleChange({ table: e.target.value })}\n            >\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n            </Form.Control>\n          </Form.Group>\n          <TextField\n            id=\"datetime-local\"\n            label=\"Start Time\"\n            type=\"datetime-local\"\n            defaultValue={new Date()}\n            className={classes.textField}\n            onChange={(e) => handleChange({ timeFrom: e.target.value })}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            id=\"datetime-local\"\n            label=\"End Time\"\n            type=\"datetime-local\"\n            defaultValue={new Date()}\n            className={classes.textField}\n            onChange={(e) => handleChange({ timeTo: e.target.value })}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          Available Tables:{tables.join(\" \")}\n        </form>\n      </>\n    )\n  );\n}\n","import React from \"react\";\nimport { isEmpty } from \"lodash\";\nimport { Button, Modal, Form, Collapse } from \"react-bootstrap\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { Link } from \"react-router-dom\";\nimport ReservationForm from \"../../components/ReservationForm\";\nimport api from \"axios\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\n\nimport \"./Menu.css\";\n\nconst colors = [\"#0088FE\", \"#00C49F\", \"#ff0000\", \"#9500ff\"];\n\nexport default class MenuItemModal extends React.Component {\n  state = {\n    quantity: 1,\n    type: 0,\n    table: 1,\n    timeTo: null,\n    timeFrom: null,\n    message: null,\n    orderSuccess: false,\n    openCommentSection: false,\n    comments: [],\n  };\n\n  handleQuantityChange = (event) => {\n    this.setState({ quantity: event.currentTarget.value });\n  };\n\n  handleShowComments = (event) => {\n    this.setState((prevState) => ({\n      openCommentSection: !prevState.openCommentSection,\n    }));\n  };\n\n  componentDidMount() {\n    this.fetchDishRatings();\n  }\n\n  fetchDishRatings = async () => {\n    try {\n      let { data: res } = await api.get(\n        `/rating/dishes/${this.props.modalData.dishId}`\n      );\n      this.setState({ comments: res });\n    } catch (E) {\n      console.log(E);\n    }\n  };\n\n  handleChange = (changeObj) =>\n    this.setState((prev) => ({ ...prev, ...changeObj }));\n\n  makeOrder = async () => {\n    let reservation = {};\n    const { quantity, timeTo, timeFrom, table, type } = this.state;\n    const { dishId: id } = this.props.modalData;\n    console.log(table);\n    try {\n      if (timeTo && timeFrom && table) {\n        reservation = {\n          timeSlot: {\n            from: new Date(timeFrom).toISOString(),\n            to: new Date(timeTo).toISOString(),\n          },\n          table: parseInt(table),\n        };\n      }\n      let { data } = await api.post(`/orders`, {\n        type,\n        dishes: [{ id, quantity: parseInt(quantity) }],\n        ...reservation,\n      });\n      this.setState((prev) => ({\n        ...prev,\n        message: \"Order was successful\",\n        orderSuccess: true,\n      }));\n    } catch (e) {\n      this.setState((prev) => ({\n        ...prev,\n        message: !isEmpty(e.response.data)\n          ? e.response.data.message\n          : \"You are unable to Order\",\n      }));\n    }\n  };\n\n  render() {\n    const { type, table, timeTo, timeFrom, message, orderSuccess } = this.state;\n    console.log(orderSuccess);\n    /* If user is not signed in: render modal with option to sign in*/\n    if (isEmpty(this.props.user)) {\n      return (\n        <Modal className=\"item-modal\" {...this.props} size=\"lg\">\n          <Modal.Header closeButton>\n            <Modal.Title>Please login</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"modal-signin-message\">\n              Must be signed in as a customer to order\n            </div>\n            <Link to=\"/Signin\">\n              <Button variant=\"success\">Take me to Sign In</Button>\n            </Link>\n          </Modal.Body>\n        </Modal>\n      );\n    } else if (\n      !isEmpty(this.props.user) &&\n      this.props.user.role !== \"CUSTOMER\" &&\n      this.props.user.role !== \"VIP\"\n    ) {\n      return (\n        <Modal className=\"item-modal\" {...this.props} size=\"lg\">\n          <Modal.Header closeButton>\n            <Modal.Title>Please login</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"modal-signin-message\">\n              Must be signed in as a customer to order\n            </div>\n          </Modal.Body>\n        </Modal>\n      );\n    } else if (!isEmpty(this.props.user) && this.props.user.closed) {\n      return (\n        <Modal className=\"item-modal\" {...this.props} size=\"lg\">\n          <Modal.Header closeButton>\n            <Modal.Title>Account Closed</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"modal-signin-message\">\n              You can't order. Your account was closed.\n            </div>\n          </Modal.Body>\n        </Modal>\n      );\n    } else if (!isEmpty(this.props.user) && !this.props.user.verified) {\n      return (\n        <Modal className=\"item-modal\" {...this.props} size=\"lg\">\n          <Modal.Header closeButton>\n            <Modal.Title>Account Unverified</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"modal-signin-message\">\n              You can't order. Wait until manager verifies your account.\n            </div>\n          </Modal.Body>\n        </Modal>\n      );\n    } else if (orderSuccess) {\n      return (\n        <Modal className=\"item-modal\" {...this.props} size=\"lg\">\n          <Modal.Header closeButton>\n            <Modal.Title>{this.props.modalData.dishTitle}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div>{message}</div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"success\" onClick={this.props.onHide}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      );\n    } else {\n      return (\n        /* If user is signed in and is a customer: render modal allowing them to order*/\n        <Modal className=\"item-modal\" {...this.props} size=\"lg\">\n          <Modal.Header closeButton>\n            <Modal.Title>{this.props.modalData.dishTitle}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <>\n              {\" \"}\n              <div className=\"modal-item-img\">\n                <img\n                  onError={(event) => {\n                    event.target.src =\n                      \"/Online-Restaurant-System-Frontend/favicon.ico\";\n                  }}\n                  src={this.props.modalData.dishImage}\n                  width=\"300\"\n                  height=\"200\"\n                  alt=\"dish\"\n                />\n              </div>\n              <div className=\"modal-dish-desc\">\n                {this.props.modalData.dishDescription}\n              </div>\n              <Rating\n                name=\"read-only\"\n                value={this.props.modalData.dishRating}\n                readOnly\n                precision={0.5}\n                size=\"medium\"\n              />\n              <div className=\"modal-keyword-container\">\n                {this.props.modalData.keywords.map((el, i) => (\n                  <Button\n                    disabled=\"true\"\n                    style={{\n                      backgroundColor: colors[i],\n                      borderColor: colors[i],\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    {el}\n                  </Button>\n                ))}\n              </div>\n              <Form.Group className=\"modal-quantity-form\">\n                <Form.Label>Quantity</Form.Label>\n                <Form.Control as=\"select\" onChange={this.handleQuantityChange}>\n                  <option value={1}>1</option>\n                  <option value={2}>2</option>\n                  <option value={3}>3</option>\n                  <option value={4}>4</option>\n                  <option value={5}>5</option>\n                </Form.Control>\n              </Form.Group>\n              {console.log(\"Event Value\", this.state.quantity)}\n              <div>\n                <p>Choose Order Type Pickup:</p>\n                Pick-up\n                <input\n                  type=\"radio\"\n                  name=\"type\"\n                  value={0}\n                  defaultChecked\n                  onClick={() =>\n                    this.setState((prev) => ({ ...prev, type: 0 }))\n                  }\n                />\n                Delivery:\n                <input\n                  type=\"radio\"\n                  name=\"type\"\n                  value={1}\n                  onClick={() =>\n                    this.setState((prev) => ({ ...prev, type: 1 }))\n                  }\n                />\n                Reservation:\n                <input\n                  type=\"radio\"\n                  name=\"type\"\n                  value={2}\n                  onClick={() =>\n                    this.setState((prev) => ({ ...prev, type: 2 }))\n                  }\n                />\n              </div>\n              <ReservationForm\n                shouldShow={type === 2}\n                handleChange={this.handleChange}\n                table={table}\n                timeFrom={timeFrom}\n                timeTo={timeTo}\n              />\n              {message}\n            </>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={this.props.onHide}>\n              Cancel\n            </Button>\n            <Button variant=\"success\" onClick={this.makeOrder}>\n              Place Order\n            </Button>\n          </Modal.Footer>\n          <Button onClick={this.handleShowComments}>\n            Show User Comments and Ratings\n          </Button>\n          <Collapse in={this.state.openCommentSection}>\n            <div style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\n              {isEmpty(this.state.comments) ? (\n                <>No Comments Yet</>\n              ) : (\n                this.state.comments.map((el) => (\n                  <div style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\n                    <ListItem button>\n                      <ListItemAvatar>\n                        <AccountCircleIcon></AccountCircleIcon>\n                      </ListItemAvatar>\n                      <ListItemText primary={`User ID:${el.critic.id}`} />\n                      <ListItemText primary={`${el.comments}`} />\n                      <Rating\n                        name=\"read-only\"\n                        value={el.rating}\n                        readOnly\n                        precision={0.5}\n                        size=\"medium\"\n                      />\n                    </ListItem>\n                  </div>\n                ))\n              )}\n            </div>\n          </Collapse>\n        </Modal>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Grid, Divider } from \"@material-ui/core/\";\nimport MenuItemModal from \"./MenuItemModal\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUtensils } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport \"./Menu.css\";\n\nexport default class Menu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      topThree: [],\n      isLoading: true,\n      searchText: \"\",\n      modalShow: false,\n      modalData: {\n        dishId: 1,\n        dishTitle: \"Cup Cake\",\n        dishImage: \"\",\n        dishRating: \"0\",\n        dishDescription: \"Some sort of description for a dish\",\n        dishPrice: \"5.99\",\n        keywords: [\"sweet\", \"cake\", \"cup\"],\n      },\n      orderItemQuantity: null,\n      orderItemId: null,\n    };\n    this.handleSearchTextChange = this.handleSearchTextChange.bind(this);\n    this.handleModalClose = this.handleModalClose.bind(this);\n  }\n\n  handleModalClose() {\n    this.setState({ modalShow: false });\n  }\n\n  handleSearchTextChange(event) {\n    this.setState({ searchText: event.target.value });\n  }\n\n  componentDidMount() {\n    //**MAKE API CALL TO BACKEND HERE**//\n    axios.get(\"menu\").then((element) => {\n      element.data.sort((a, b) => b.averageRating - a.averageRating);\n      console.log(\"Sorted data\", element.data);\n\n      let newData = element.data.map((element) => ({\n        dishId: element.id,\n        dishRating: element.averageRating,\n        dishTitle: element.name,\n        dishDescription: element.description,\n        dishPrice: element.price,\n        isSpecial: element.special,\n        dishImage: element.imageUrl,\n        dishChef : element.chef,\n        //keywords: [\"Spicy\",\"Dessert\"]\n        keywords: element.keyWord.map((word) => word.keyWord.toLowerCase()),\n      }));\n      this.setState({\n        data: [...this.state.data, ...newData],\n        isLoading: false,\n      });\n    });\n\n    axios.get(\"menu/mostOrdered\").then((element) => {\n      console.log(element.data);\n\n      let newData = element.data.map((element) => ({\n        dishId: element.id,\n        dishRating: element.averageRating,\n        dishTitle: element.name,\n        dishDescription: element.description,\n        dishPrice: element.price,\n        isSpecial: element.special,\n        dishImage: element.imageUrl,\n        dishChef : element.chef,\n        //keywords: [\"Spicy\",\"Dessert\"]\n        keywords: element.keyWord.map((word) => word.keyWord.toLowerCase()),\n      }));\n      this.setState({\n        topThree: [...this.state.topThree, ...newData],\n        isLoading: false,\n      });\n    });\n  }\n\n  render() {\n    const {\n      data,\n      topThree,\n      isLoading,\n      searchText,\n      modalShow,\n      modalData,\n      orderItemId,\n    } = this.state;\n    console.log(this.state);\n    return (\n      <>\n       \n        <div className=\"page-title-container\">\n          <div className=\"page-title-text\">Menu</div>\n          <div className=\"menu-icon-divider-container\">\n            <hr className=\"title-divider-left\" />\n            <FontAwesomeIcon icon={faUtensils} size=\"2x\" color=\"gray\" />\n            <hr className=\"title-divider-right\" />\n          </div>\n          <div className=\"menu-searchbox-container\">\n            <Form inline>\n              <Form.Control\n                className=\"mr-sm-2\"\n                type=\"text\"\n                value={searchText}\n                placeholder=\"Search\"\n                onChange={this.handleSearchTextChange}\n              />\n              <Button variant=\"outline-info\">Search</Button>\n            </Form>\n          </div>\n        </div>\n\n        <div className=\"section-divider-container\">\n          <hr className=\"section-divider-left\" />\n          Top Rated\n          <hr className=\"section-divider-right\" />\n        </div>\n        {!isLoading ? (\n          <div className=\"menu-items-container\">\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n              {this.state.data.slice(0, 3).map((el) => (\n                <Grid item key={el.dishId}>\n                  <div className=\"item-container\">\n                    <div className=\"dish-img-container\">\n                      <img\n                        onError={(event) => {\n                          event.target.src =\n                            \"/Online-Restaurant-System-Frontend/favicon.ico\";\n                        }}\n                        src={el.dishImage}\n                        width=\"298\"\n                        height=\"200\"\n                        alt=\"dish\"\n                      />\n                    </div>\n                    <Divider />\n\n                    {el.isSpecial ? (\n                      <div className=\"dish-title-container\">\n                        {el.dishTitle}\n                        {console.log(el.chef)}\n                        <button className = \"special-btn2\"> {el.dishChef.username} </button>\n                        <button className=\"special-btn\"> VIP </button>\n                      </div>\n                    ) : (\n                      <div className=\"dish-title-container\">\n                        {el.dishTitle}<button className = \"special-btn2\"> {el.dishChef.username} </button>{\" \"}\n                      </div>\n                    )}\n\n                    <div className=\"rating-container\">\n                      <Rating\n                        name=\"hover-feedback\"\n                        value={el.dishRating}\n                        precision={0.5}\n                        readOnly\n                      />\n                    </div>\n                    {el.dishDescription.length > 71 ? (\n                      <div className=\"dish-desc-container\">\n                        {el.dishDescription.substring(0, 71) + \" ...\"}\n                      </div>\n                    ) : (\n                      <div className=\"dish-desc-container\">\n                        {el.dishDescription}\n                      </div>\n                    )}\n                    <div className=\"price-add-btn-container\">\n                      <div className=\"dish-price-container\">\n                        ${el.dishPrice}\n                      </div>\n                      <div className=\"add-cart-btn\">\n                        {this.props.user.role != \"VIP\" && el.isSpecial ? (\n                          <Button>VIP Only</Button>\n                        ) : (\n                          <Button\n                            variant=\"success\"\n                            onClick={() => {\n                              this.setState({\n                                modalShow: true,\n                                modalData: el,\n                                orderItemId: el.dishId,\n                              });\n                            }}\n                          >\n                            Order\n                          </Button>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </Grid>\n              ))}\n            </Grid>\n            {modalShow && (\n              <MenuItemModal\n                show={modalShow}\n                onHide={this.handleModalClose}\n                modalData={modalData}\n                {...this.props}\n              />\n            )}\n          </div>\n        ) : (\n          <h3>Could not load top rated dishes</h3>\n        )}\n\n        <div className=\"section-divider-container\">\n          <hr className=\"section-divider-left\" />\n          Most Ordered\n          <hr className=\"section-divider-right\" />\n        </div>\n        {!isLoading ? (\n          <div className=\"menu-items-container\">\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n              {this.state.topThree.map((el) => (\n                <Grid item key={el.dishId}>\n                  <div className=\"item-container\">\n                    <div className=\"dish-img-container\">\n                      <img\n                        onError={(event) => {\n                          event.target.src =\n                            \"/Online-Restaurant-System-Frontend/favicon.ico\";\n                        }}\n                        src={el.dishImage}\n                        width=\"298\"\n                        height=\"200\"\n                        alt=\"dish\"\n                      />\n                    </div>\n                    <Divider />\n\n                    {el.isSpecial ? (\n                      <div className=\"dish-title-container\">\n                        {el.dishTitle}\n                        <button className = \"special-btn2\"> {el.dishChef.username} </button>\n                        <button className=\"special-btn\"> VIP </button>\n                      </div>\n                    ) : (\n                      <div className=\"dish-title-container\">\n                        {el.dishTitle}<button className = \"special-btn2\"> {el.dishChef.username} </button>{\" \"}\n                      </div>\n                    )}\n\n                    <div className=\"rating-container\">\n                      <Rating\n                        name=\"hover-feedback\"\n                        value={el.dishRating}\n                        precision={0.5}\n                        readOnly\n                      />\n                    </div>\n                    {el.dishDescription.length > 71 ? (\n                      <div className=\"dish-desc-container\">\n                        {el.dishDescription.substring(0, 71) + \" ...\"}\n                      </div>\n                    ) : (\n                      <div className=\"dish-desc-container\">\n                        {el.dishDescription}\n                      </div>\n                    )}\n                    <div className=\"price-add-btn-container\">\n                      <div className=\"dish-price-container\">\n                        ${el.dishPrice}\n                      </div>\n                      <div className=\"add-cart-btn\">\n                        {this.props.user.role != \"VIP\" && el.isSpecial ? (\n                          <Button>VIP Only</Button>\n                        ) : (\n                          <Button\n                            variant=\"success\"\n                            onClick={() => {\n                              this.setState({\n                                modalShow: true,\n                                modalData: el,\n                                orderItemId: el.dishId,\n                              });\n                            }}\n                          >\n                            Order\n                          </Button>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </Grid>\n              ))}\n            </Grid>\n            {modalShow && (\n              <MenuItemModal\n                show={modalShow}\n                onHide={this.handleModalClose}\n                modalData={modalData}\n                {...this.props}\n              />\n            )}\n          </div>\n        ) : (\n          <h3>Could not load top rated dishes</h3>\n        )}\n\n        <div className=\"section-divider-container\">\n          <hr className=\"section-divider-left\" />\n          All\n          <hr className=\"section-divider-right\" />\n        </div>\n        {!isLoading ? (\n          <div className=\"menu-items-container\">\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n              {data\n                .filter((p) =>\n                  p.keywords.some((s) => {\n                    if (searchText === \"\") return s;\n                    else if (s.indexOf(searchText.toLowerCase()) !== -1) {\n                      return s;\n                    }\n                  })\n                )\n                .map((el) => (\n                  <Grid item key={el.dishId}>\n                    <div className=\"item-container\">\n                      <div className=\"dish-img-container\">\n                        <img\n                          onError={(event) => {\n                            event.target.src =\n                              \"/Online-Restaurant-System-Frontend/favicon.ico\";\n                          }}\n                          src={el.dishImage}\n                          width=\"298\"\n                          height=\"200\"\n                          alt=\"dish\"\n                        />\n                      </div>\n                      <Divider />\n\n                      {el.isSpecial ? (\n                        <div className=\"dish-title-container\">\n                          {el.dishTitle}\n                          <button className = \"special-btn2\"> {el.dishChef.username} </button>\n                          <button className=\"special-btn\"> VIP </button>\n                        </div>\n                      ) : (\n                        <div className=\"dish-title-container\">\n                          {el.dishTitle}<button className = \"special-btn2\"> {el.dishChef.username} </button>{\" \"}\n                        </div>\n                      )}\n\n                      <div className=\"rating-container\">\n                        <Rating\n                          name=\"hover-feedback\"\n                          value={el.dishRating}\n                          precision={0.5}\n                          readOnly\n                        />\n                      </div>\n                      {/* The following code renders the dish description */}\n                      {/* If the dish description is too long, the substring is used followed by ellipses to indicate overflow */}\n                      {el.dishDescription.length > 71 ? (\n                        <div className=\"dish-desc-container\">\n                          {el.dishDescription.substring(0, 71) + \" ...\"}\n                        </div>\n                      ) : (\n                        <div className=\"dish-desc-container\">\n                          {el.dishDescription}\n                        </div>\n                      )}\n                      <div className=\"price-add-btn-container\">\n                        <div className=\"dish-price-container\">\n                          ${el.dishPrice}\n                        </div>\n                        <div className=\"add-cart-btn\">\n                          {this.props.user.role != \"VIP\" && el.isSpecial ? (\n                            <Button>VIP Only</Button>\n                          ) : (\n                            <Button\n                              variant=\"success\"\n                              onClick={() => {\n                                this.setState({\n                                  modalShow: true,\n                                  modalData: el,\n                                  orderItemId: el.dishId,\n                                });\n                              }}\n                            >\n                              Order\n                            </Button>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </Grid>\n                ))}\n            </Grid>\n            {modalShow && (\n              <MenuItemModal\n                show={modalShow}\n                onHide={this.handleModalClose}\n                modalData={modalData}\n                {...this.props}\n              />\n            )}\n          </div>\n        ) : (\n          <h3>Unable to Load Menu Data</h3>\n        )}\n      </>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Divider } from \"@material-ui/core/\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUtensils } from \"@fortawesome/free-solid-svg-icons\";\nimport MenuItemModal from \"./Menu/MenuItemModal\";\nimport \"./Menu/Menu.css\";\n\nfunction VipMenu() {\n  //   const defaultModalData = {\n  //     dishId: 1,\n  //     dishTitle: \"Cup Cake\",\n  //     dishDescription: \"Some sort of description for a dish\",\n  //     dishPrice: \"5.99\",\n  //     keywords: [\"sweet\", \"cake\", \"cup\"]\n  //   }\n\n  //   const [dishes, setDishes] = useState([]);\n  //   const [modalState, setModalState] = useState(false);\n  //   const [modalData, setModalData] = useState([defaultModalData]);\n  //   const [quantity, setQuantity] = useState(0);\n\n  //   const url = '/menu';\n  //   useEffect( () => {\n  //     async function testing() {\n  //       const test = await axios.get(url);\n  //       setDishes(test.data);\n  //       return test;\n  //     }\n  //     testing();\n  //   }, [url]);\n\n  // function handleModalOrder(quantity) {\n  //   setQuantity( parseInt(quantity));\n  //   setModalState(false);\n  // }\n\n  const imgMyimageexample = require(\"./vip-confetti.webp\");\n  const style = {\n    width: \"100%\",\n    height: \"875px\",\n    color: \"white\",\n    backgroundImage: `url(${imgMyimageexample})`,\n    backgroundSize: \"cover\",\n  };\n\n  return (\n    // <div className=\"App\">\n\n    <div style={style} className=\"page-title-container-vip\">\n      <div className=\"page-title-text\">Congratulations!</div>\n      <div className=\"page-desc-text\">\n        Thanks for being a VIP member! Enjoy access to our special dishes and all your orders now apply a 10% discount at checkout!\n      </div>\n    </div>\n\n    //   <Grid\n    //     container\n    //     direction=\"row\"\n    //     justify=\"center\"\n    //     alignItems=\"center\"\n    //     spacing={2}\n    //   >\n\n    //   {dishes.map( dish => {\n    //    if(dish.special)\n    //    return(\n\n    //     <Grid item key={dish.id}>\n\n    //         <div className=\"item-container\">\n    //           <div className=\"dish-img-container\">\n    //             <img\n    //               onError={(event) => {\n    //                 event.target.src = \"/Online-Restaurant-System-Frontend/favicon.ico\";\n    //               }}\n    //               src=\"/Online-Restaurant-System-Frontend/menu-item-img-default.jpg\"\n    //               width=\"298\"\n    //               height=\"200\"\n    //               alt=\"dish\"\n    //             />\n    //           </div>\n    //           <Divider />\n    //           <div className=\"dish-title-container\">{dish.name}</div>\n    //           <div className=\"rating-container\">\n    //             <Rating name=\"hover-feedback\" value={dish.averageRating} precision={0.5}/>\n    //           </div>\n    //           {dish.description.length > 71 ? (\n    //             <div className=\"dish-desc-container\">\n    //               {dish.description.substring(0, 71) + \" ...\"}\n    //             </div>\n    //           ) : (\n    //             <div className=\"dish-desc-container\">\n    //               {dish.description}\n    //             </div>\n    //           )}\n    //           <div className=\"price-add-btn-container\">\n    //             <div className=\"dish-price-container\">\n    //               ${dish.price}\n    //             </div>\n    //             <div className=\"add-cart-btn\">\n    //               <Button variant=\"success\" onClick={() => {setModalState(true); setModalData(dish);}}>Order</Button>\n    //             </div>\n    //           </div>\n    //         </div>\n\n    //       </Grid>\n    //          )})}\n\n    //   </Grid>\n\n    //   {/*<div> <MenuItemModal show={modalState} handleOrder={quantity} onHide={setModalState(false)} modalData={modalData} />  </div>*/}\n\n    // </div>\n  );\n}\n\nexport default VipMenu;\n","import React from 'react';\nimport { Grid, Divider } from \"@material-ui/core/\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUtensils } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from 'axios';\nimport \"./Chefs.css\";\n\nexport default class Chefs extends React.Component{\n  constructor() {\n    super();\n\n    this.state = {\n      data: [],\n      isLoading: true,\n      randomDesc: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('users/roles/CHEF')\n    .then((json) => {\n      this.setState({ \n         data: [...this.state.data, ...json.data],\n         isLoading: false\n      });\n    })\n\n    this.setState({ \n      randomDesc: [\"coming soon\"],\n   });\n\n  //   this.setState({\n  //     isLoading: false,\n  //     data: [\n  //       {\n  //         chefId: 1,\n  //         chefName: \"Gordan Ramsay\",\n  //         chefDescription: \"Multi-Michelin starred chef and star of Hell's Kitchen\",\n  //       },\n  //       {\n  //         chefId: 2,\n  //         chefName: \"Guy Fieri\",\n  //         chefDescription: \"An American restaurateur, author, and an Emmy Award winning television presenter\",\n  //       },\n  //       {\n  //         chefId: 3,\n  //         chefName: \"Wolfgang Puck\",\n  //         chefDescription: \"Wolfgang Johannes Puck is an Austrian-American chef, restaurateur, and actor\",\n  //       },\n  //     ],\n  //   });\n   }\n\n    render() {\n      const { data, isLoading, randomDesc } = this.state;\n      return (\n        <> \n          <div className=\"page-title-container\">\n            <div className=\"page-title-text\">Our Chefs</div>\n            <div className=\"menu-icon-divider-container\">\n              <hr className=\"title-divider-left\" />\n              <FontAwesomeIcon icon={faUtensils} size=\"2x\" color=\"gray\" />\n              <hr className=\"title-divider-right\" />\n            </div>\n          </div>\n          {!isLoading ? (\n            <div className=\"menu-items-container\">\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={2}\n              >\n                {data.map((el) => (\n                  <Grid item key={el.id}>\n                    <div className=\"chef-items-container\">\n                      <div className=\"chef-img-container\">\n                        <img\n                          onError={(event) => {\n                            event.target.src = \"/Online-Restaurant-System-Frontend/favicon.ico\";\n                          }}\n                          src=\"/Online-Restaurant-System-Frontend/chef-img-default.jpg\"\n                          width=\"298\"\n                          height=\"230\"\n                          alt=\"chef\"\n                        />\n                      </div>\n                      <div className=\"chef-title-container\">\n                        {el.username}\n                      </div>\n                      \n                      <Divider />\n                      {randomDesc.length > 71 ? (\n                      <div className=\"chef-desc-container\">\n                        {randomDesc.substring(0, 71) + \" ...\"}\n                      </div>\n                    ) : (\n                      <div className=\"chef-desc-container\">\n                        {randomDesc}\n                      </div>\n                    )}\n                    \n                    </div>\n                  </Grid>\n                ))}\n              </Grid>\n            </div>\n          ) : (\n            <h3>Unable to Load Menu Data</h3>\n          )}\n        </>\n      );\n    }\n}","import axios from \"axios\";\n\nconst setJwtHeader = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport { setJwtHeader };\n","import api from \"axios\";\nimport { setJwtHeader } from \"../../utils/jwt\";\n\nconst setUser = (user) => {\n  return {\n    type: \"SET_USER\",\n    payload: user,\n  };\n};\n\nconst resetUser = () => {\n  return {\n    type: \"RESET_USER\",\n  };\n};\n\nconst login = (formData, history) => {\n  return async (dispatch) => {\n    try {\n      const { data, headers } = await api.post(\"/auth\", formData);\n\n      localStorage.setItem(\"jwt\", headers.authorization);\n      console.log(headers.authorization);\n      localStorage.setItem(\"userId\", data.id);\n      dispatch(\n        setUser({\n          id: data.id,\n          username: data.username,\n          role: data.role,\n          closed: data.closed,\n          verified: data.verified,\n        })\n      );\n      history.push(\"/\");\n      history.go(0);\n    } catch (err) {\n      throw err;\n    }\n  };\n};\n\nconst getUser = (id) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await api.get(`/users/${id}`);\n      dispatch(\n        setUser({\n          id: data.id,\n          username: data.username,\n          role: data.role,\n          closed: data.closed,\n          verified: data.verified,\n        })\n      );\n      return data;\n    } catch (err) {}\n  };\n};\n\nconst logout = (history) => {\n  return async (dispatch) => {\n    localStorage.removeItem(\"jwt\");\n    localStorage.removeItem(\"userId\");\n    setJwtHeader(false);\n    dispatch(resetUser());\n    history.push(\"/\");\n  };\n};\n\nexport { login, logout, setUser, getUser };\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../redux/actions/user\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUtensils } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./LoginForm.css\";\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      setError(\"Loading...\");\n      await dispatch(login({ username, password }, history));\n    } catch (err) {\n      setError(\"Can't Login. Please try again.\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"sign-in-title\">Sign-In</div>\n      <div className=\"menu-icon-divider-container\">\n        <hr className=\"title-divider-left\" />\n        <FontAwesomeIcon icon={faUtensils} size=\"2x\" color=\"gray\" />\n        <hr className=\"title-divider-right\" />\n      </div>\n      <div className=\"form-container\">\n        <Form onSubmit={handleLogin}>\n          <Form.Group>\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              autoFocus\n              required\n              name=\"username\"\n              value={username}\n              onChange={handleUsernameChange}\n              placeholder=\"Enter Username\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              type=\"password\"\n              id=\"password-field\"\n              name=\"password\"\n              value={password}\n              onChange={handlePasswordChange}\n              placeholder=\"Enter Password\"\n            />\n          </Form.Group>\n          <div className=\"signin-btn-container\">\n            <Button variant=\"success\" type=\"submit\" block>\n              Sign In\n            </Button>\n            {error && <div>{error}</div>}\n            <hr className=\"signin-create-divider\" />\n          </div>\n        </Form>\n        <Link to=\"/signup\">\n          <Button variant=\"primary\" type=\"submit\" block>\n            Create Account\n          </Button>\n        </Link>\n      </div>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport LoginForm from \"../components/LoginForm\";\n\nconst Signin = (props) => {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Signin;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUtensils } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button, Form } from \"react-bootstrap\";\nimport api from \"axios\";\n\nimport \"./SignupForm.css\";\n\nconst SignupForm = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [userType, setUserType] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleAddressChange = (e) => {\n    setAddress(e.target.value);\n  };\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleUserTypeChange = (e) => {\n    setUserType(e.target.value);\n  };\n\n  const handleRegisterAccount = async (e) => {\n    e.preventDefault();\n    const body = {\n      username,\n      password,\n      address,\n      name,\n      role: userType,\n    };\n    try {\n      await api.post(\"/users\", body);\n      console.log(111111111111);\n      history.push(\"/signin\");\n    } catch (e) {\n      setError(\"Can't create user. Try a different username.\");\n    }\n  };\n\n\n  return (\n    <>\n      <div className=\"sign-in-title\">Register</div>\n      <div className=\"menu-icon-divider-container\">\n        <hr className=\"title-divider-left\" />\n        <FontAwesomeIcon icon={faUtensils} size=\"2x\" color=\"gray\" />\n        <hr className=\"title-divider-right\" />\n      </div>\n      <div className=\"form-container\">\n        <Form onSubmit={handleRegisterAccount}>\n        <Form.Group>\n            <Form.Label>Full Name</Form.Label>\n            <Form.Control\n              autoFocus\n              required\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleNameChange}\n              placeholder=\"Create Name\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              autoFocus\n              required\n              type=\"text\"\n              name=\"username\"\n              value={username}\n              onChange={handleUsernameChange}\n              placeholder=\"Create Username\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              type=\"password\"\n              id=\"password-field\"\n              name=\"password\"\n              value={password}\n              onChange={handlePasswordChange}\n              placeholder=\"Create Password\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              required\n              id=\"address-field\"\n              name=\"address\"\n              value={address}\n              onChange={handleAddressChange}\n              placeholder=\"Address\"\n            />\n          </Form.Group>\n          <fieldset>\n            <Form.Group>\n              <Form.Label>Type</Form.Label>\n              <Form.Group>\n                <Form.Check\n                  inline\n                  required\n                  type=\"radio\"\n                  label=\"customer\"\n                  name=\"user-type\"\n                  id=\"customer\"\n                  value=\"CUSTOMER\"\n                  onChange={handleUserTypeChange}\n                />\n                <Form.Check\n                  inline\n                  type=\"radio\"\n                  label=\"chef\"\n                  name=\"user-type\"\n                  id=\"chef\"\n                  value=\"CHEF\"\n                  onChange={handleUserTypeChange}\n                />\n                <Form.Check\n                  inline\n                  type=\"radio\"\n                  label=\"deliverer\"\n                  name=\"user-type\"\n                  id=\"deliverer\"\n                  value=\"DELIVERER\"\n                  onChange={handleUserTypeChange}\n                />\n              </Form.Group>\n            </Form.Group>\n          </fieldset>\n          {error}\n          <div className=\"register-account-btn-submit\">\n            <Button variant=\"success\" type=\"submit\" block>\n              Register Account\n            </Button>\n          </div>\n        </Form>\n      </div>\n      {console.log(name, username, address, password, userType)}\n    </>\n  );\n};\n\nexport default SignupForm;\n","import React from \"react\";\nimport SignupForm from \"../components/SignupForm\"\n\nconst Signup = (props) => {\n  return (\n    <div>\n      <SignupForm />\n    </div>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport {Button} from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUtensils } from '@fortawesome/free-solid-svg-icons';\nimport AwesomeSlider from 'react-awesome-slider';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n//import AwsSliderStyles from 'react-awesome-slider/src/styles.scss';\n\n import home from './Home.scss';\n\n\n\n\nfunction Home(){\n  const [data,setData] = useState([]);\n\n\n  // const slider = () => (\n  //   <AwesomeSlider cssModule = {home} >\n  //     <div data-src=\"/Online-Restaurant-System-Frontend/homepage-img.png\" />\n  //     <div data-src=\"/Online-Restaurant-System-Frontend/menu-item-img-default.jpg\" />\n  //     <div data-src = \"/Online-Restaurant-System-Frontend/homepage-img.png\" />\n  //   </AwesomeSlider>\n  \n  // );\n  \n\n  const loadData = async () => {\n    try{\n       axios.get(\"menu\").then((element) => {\n       console.log(element.data);\n \n       element.data.sort((a, b) => b.averageRating - a.averageRating);\n       console.log(\"Sorted data\", element.data);\n \n       let newData = element.data.map((element) => ({\n         dishId: element.id,\n         dishRating: element.averageRating,\n         dishTitle: element.name,\n         dishDescription: element.description,\n         dishPrice: element.price,\n         isSpecial: element.special,\n         dishImage : element.imageUrl,\n         //keywords: [\"Spicy\",\"Dessert\"]\n         keywords: element.keyWord.map((word) => word.keyWord.toLowerCase()),\n       }))\n\n       setData(prev =>[...prev,...newData]);\n     });\n   }catch(error){console.log(error)}\n  }\n\n  useEffect(() => {\n        \n    loadData();\n  \n}, []);\n\n\n\n    \n      return (\n        <> \n        {console.log(data[0])}\n            <AwesomeSlider cssModule = {home} >\n              {data.slice(0,3).map((el) => (\n                <div data-src= {el.dishImage} >\n                  <div className=\"welcome-text-container\" style={{position:\"absolute\",padding:\"10px\",width:\"100%\",background:\"rgba(204, 204, 204, 0.6)\",color:\"black\",textAlign:\"center\",top:\"15%\",left:\"left: 50%;\",transform:\"translate(-50%, -50%)\",textTransform:\"uppercase\",fontFamily:\"Tahoma, Geneva, sans-serif\",fontWeight:\"600\"}}>\t\n                  <div className=\"welcome-text-upper\" style={{marginBottom:\"5px\",fontSize:\"25px\"}}>\t\n                    Welcome to Our Restaurant\t\n                  </div>\t\n                  <div className=\"welcome-text-lower\" style={{marginBottom:\"5px\",fontSize:\"15px\"}}>\t\n                    Warm Baked Sweets\t\n                  </div>\t\n                  <div className=\"welcome-button\" style={{marginBottom:\"5px\"}}>\t\n                    <Link to=\"/Menu\">\t\n                      <Button variant=\"outline-dark\">Check Out Our Menu</Button>\t\n                    </Link>\t\n                  </div>\t\n                </div>\n                </div>\n\n                ))\n              }\n              \n            </AwesomeSlider>\n        </>\n      );\n}\n\nexport default Home\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUser } from \"../redux/actions/user\";\nimport { isEmpty } from \"lodash\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUtensils } from \"@fortawesome/free-solid-svg-icons\";\nimport {Form, Button} from 'react-bootstrap';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function Discussions() {\n  const [discussions, setDiscussions] = useState([]);\n  const [errorMessage, setMessage] = useState(\"\");\n  const [topic, setTopic] = useState(\"\");\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const user = useSelector(({ user }) => user);\n\n  const fetchData = async () => {\n    try {\n      let { data } = await api.get(\"/discussion\");\n      setDiscussions(data);\n    } catch (e) {}\n  };\n\n  const handleChange = (e) => {\n    setTopic(e.target.value);\n  };\n\n  const createTopic = async (event) => {\n    event.preventDefault();\n    if ([\"CUSTOMER\", \"VIP\"].includes(user.role)) {\n      try {\n        let { data } = await api.post(\"/discussion\", { topic });\n        setDiscussions((prev) => [...prev, data]);\n        setTopic(\"\")\n        await dispatch(getUser(user.id));\n      } catch (error) {}\n    } else {\n      setMessage(\"Only Customer can create discussions.\");\n    }\n  };\n\n  const showList = () => {\n    return discussions.map((item, index) => (\n      <>\n      <Link to={`/discussions/${item.id}`} key={index} style={{textDecoration:'none'}}>\n        <Card variant=\"outlined\" style={{minWidth:'max-content',maxWidth:\"800px\",margin:'auto',marginBottom:\"20px\",backgroundColor:\"#dbdbdb\"}}>\n          <CardContent>\n            <Typography style={{textTransform:'uppercase',fontWeight:\"600\"}} variant=\"h5\" component=\"h2\">\n              {item.topic}\n            </Typography>\n            <Typography style={{fontSize:'14'}} color=\"textSecondary\" gutterBottom>\n              By: {item.creator.username}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Link>\n      </>\n    ));\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <>\n    <div style={{margin:\"auto\", textAlign:\"center\",marginTop:'10px',width:\"800px\"}}>\n      <div className=\"page-title-text\">Discussion Board</div>\n        <div className=\"menu-icon-divider-container\" style={{marginBottom:\"20px\"}}>\n        <hr className=\"title-divider-left\" />\n          <FontAwesomeIcon icon={faUtensils} size=\"2x\" color=\"gray\" />\n        <hr className=\"title-divider-right\" />\n      </div>\n      {!discussions.length ? <div>No Discussions</div> : showList()}\n    </div>\n    <div style={{margin:\"auto\",width:\"max-content\"}}>\n      <Form inline onSubmit={createTopic}>\n        <Form.Group>\n          <Form.Control className=\"mx-sm-3\" placeholder=\"Add Topic\" value={topic} onChange={handleChange} style={{width:\"400px\"}}/>\n          <Form.Text id=\"passwordHelpBlock\" muted  style={{marginRight:\"16px\"}}>\n            {isEmpty(user) ? <> Please Sign In First </> : user.closed ?  <> Your Account Is Closed</> : !user.verified ? <> Your Account Is Unverified</> : null}\n          </Form.Text>\n        </Form.Group>\n        <Button type=\"submit\" disabled={!topic || !user.role || user.closed || !user.verified}>\n          Create Topic\n        </Button>\n      </Form>\n    </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport api from \"axios\";\nimport { isEmpty } from \"lodash\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUser } from \"../redux/actions/user\";\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Divider from '@material-ui/core/Divider';\nimport {Form, Button} from 'react-bootstrap';\n\nexport default function Comments() {\n  const [comments, setComments] = useState([]);\n  const location = useLocation();\n  const id = parseInt(location.pathname.split(\"/\").splice(-1));\n  const [errorMessage, setMessage] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [discussion, setDiscussion] = useState({});\n  const dispatch = useDispatch();\n  const user = useSelector(({ user }) => user);\n\n  const fetchData = async () => {\n    try {\n      let { data: discussion } = await api.get(`/discussion/${id}`);\n      setDiscussion(discussion);\n      let { data: comments } = await api.get(`/comment/${id}`);\n      setComments(comments);\n    } catch (e) {}\n  };\n  const showList = () => {\n    return comments.map((item, index) => (\n      <div key={index} style={{margin:\"auto\",width:\"800px\"}}>\n        <ListItem key={index} button>\n          <ListItemAvatar style={{marginRight:\"20px\",width:\"80px\",textAlign:\"center\"}} >\n            <AccountCircleIcon style={{display:\"block\",margin:\"auto\",height:\"40px\",width:\"40px\"}}>\n            </AccountCircleIcon>\n            <Typography style={{fontWeight:\"bold\"}}>\n              {item.commenter.username}\n            </Typography>\n          </ListItemAvatar>\n          <Divider orientation=\"vertical\" flexItem style={{marginRight:\"20px\"}}/> \n          <ListItemText\n            primary={\n              <>\n                <Typography\n                  component=\"span\"\n                  variant=\"body1\"                      \n                  color=\"textPrimary\"\n                  style={{fontWeight:\"500\"}}\n                >\n                  {item.message}\n                </Typography>\n              </>\n            }\n          />\n        </ListItem>\n        <Divider />\n      </div>\n    ));\n  };\n  const handleChange = (e) => {\n    setComment(e.target.value);\n  };\n\n  const createComment = async (event) => {\n    event.preventDefault();\n    if ([\"CUSTOMER\", \"VIP\"].includes(user.role)) {\n      try {\n        let { data } = await api.post(\"/comment\", {\n          message: comment,\n          discussion: { id },\n        });\n        setComments((prev) => [...prev, data]);\n        setComment(\"\")\n        await dispatch(getUser(user.id));\n      } catch (error) {}\n    } else {\n      setMessage(\"Only Customers can comment.\");\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <>\n    <div style={{margin:\"auto\", textAlign:\"center\",marginTop:'10px'}}>\n      {isEmpty(errorMessage) ? null : <p>{errorMessage}</p>}\n      <div style={{margin:\"auto\", textAlign:\"center\"}}>\n        <Typography variant=\"h4\" style={{fontWeight:\"600\"}}>\n          Topic: {isEmpty(discussion) ? \"N/A\" : discussion.topic}\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom style={{fontWeight:\"300\"}}>\n          By: {isEmpty(discussion) ? \"N/A\" : discussion.creator.username}\n        </Typography>\n      </div>\n      <div style={{marginBottom:\"20px\"}}>\n        {!comments.length ? <div>No Comments</div> : showList()}\n      </div>\n    </div>\n    <div style={{margin:\"auto\",width:\"max-content\"}}>\n        <Form inline onSubmit={createComment}>\n          <Form.Group>\n            <Form.Control className=\"mx-sm-3\" placeholder=\"Add Comment\" value={comment} onChange={handleChange} style={{width:\"400px\"}}/>\n            <Form.Text id=\"passwordHelpBlock\" muted  style={{marginRight:\"16px\"}}>\n              {isEmpty(user) ? <> Please Sign In First </> : user.closed ?  <> Your Account Is Closed</> : !user.verified ? <> Your Account Is Unverified</> : null}\n            </Form.Text>\n          </Form.Group>\n          <Button type=\"submit\" disabled={!comment || !user.role || user.closed || !user.verified}>\n            Submit\n          </Button>\n        </Form>\n    </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport api from \"axios\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useSelector } from \"react-redux\";\nimport { Button,Form } from \"react-bootstrap\";\nimport \"./Balance.css\";\n\nconst Balance = () => {\n  const [balance, setBalance] = useState(0);\n  const [transactions, setTransactions] = useState([]);\n  const [amount, setAmount] = useState(\"\");\n  const id = useSelector(({ user }) => user.id);\n\n  const fetchData = async () => {\n    try {\n      let {\n        data: { balance },\n      } = await api.get(`/users/balance`);\n      setBalance(balance);\n\n      let { data: transactions } = await api.get(`/transactions`);\n      setTransactions(transactions);\n    } catch (e) {}\n  };\n\n  const depositMoney = async (event) => {\n    event.preventDefault();\n\n    try {\n      let { data } = await api.post(\"/transactions\", {\n        type: 1,\n        amount,\n        description: `Deposit: ${amount}`,\n        userid: { id },\n      });\n      setTransactions((prev) => [...prev, data]);\n      setBalance((prev) => prev + data.amount);\n      console.log(data);\n    } catch (error) {}\n  };\n\n  const showList = () => {\n    return transactions.map((item, index) => (\n      <div key={index}>\n        <p>\n          {item.description} | Amount:{item.amount.toFixed(2)}\n        </p>\n      </div>\n    ));\n  };\n\n  const handleChange = (e) => {\n    setAmount(e.target.value);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"outer\"> <h3> Your Balance: $<i>{balance.toFixed(2)}</i> </h3> </div>\n      \n        <form onSubmit={depositMoney}>\n          <div className=\"inner\"> \n            <h4> Deposit an amount: </h4>\n            <input \n              className=\"price\"\n              type=\"number\"\n              min=\"0.00\"\n              step=\"0.01\"\n              value={amount}\n              onChange={handleChange}\n            />\n            <Button variant=\"primary\" disabled={!amount} type=\"submit\">\n              Deposit\n            </Button>\n            </div>\n        </form>\n    \n      <div>\n      <Table aria-label=\"simple table\"> \n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Description</TableCell>\n            <TableCell align=\"center\">Amount</TableCell>\n          </TableRow>\n        </TableHead>\n\n          <TableBody>\n            {transactions.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell align=\"center\" scope=\"row\">\n                  {item.description}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {item.amount.toFixed(2)}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n\n        </Table>\n        </div>\n    </div>\n  );\n};\n\nexport default Balance;\n","import React, { useState, useEffect } from \"react\";\nimport api from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Button } from \"react-bootstrap\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Container>\n          <Box>{children}</Box>\n        </Container>\n      )}\n    </div>\n  );\n}\n\nconst Users = () => {\n  const user = useSelector(({ user }) => user);\n  const [allUsers, setAllUsers] = useState([]);\n  const [closedUsers, setClosedUsers] = useState([]);\n  const [unverifiedUsers, setUnverifiedUsers] = useState([]);\n  const [employeeUsers, setEmployeeUsers] = useState([]);\n  const [value, setValue] = React.useState(0);\n  const [salary, setSalaries] = useState([]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    fetchUsers();\n    getSalaries();\n  }, []);\n\n  const fetchUsers = async () => {\n    try {\n      let { data: allUsers } = await api.get(`/users`);\n      setAllUsers(allUsers);\n      setUnverifiedUsers(allUsers.filter((el) => el.verified === false));\n      setClosedUsers(allUsers.filter((el) => el.closed === true));\n      setEmployeeUsers(\n        allUsers.filter(\n          (el) =>\n            el.role !== \"CUSTOMER\" && el.role !== \"MANAGER\" && el.role !== \"VIP\"\n        )\n      );\n    } catch (E) {}\n  };\n\n  const getSalaries = async () => {\n    try {\n      let { data: salaries } = await api.get(\"/salary\");\n      setSalaries(salaries);\n    } catch (E) {\n      console.log(E);\n    }\n  };\n\n  const verifyUser = async (id) => {\n    console.log(id);\n    try {\n      await api.patch(`/users/${id}`, {\n        verified: true,\n      });\n      fetchUsers();\n    } catch (E) {\n      console.log(E);\n    }\n  };\n\n  const openUserAccount = async (id) => {\n    console.log(id);\n    try {\n      console.log(\"deleting\",id);\n      await api.delete(`/warning/${id}`);\n      await api.patch(`/users/openAccount/${id}`, {\n        closed: false,\n      });\n      fetchUsers();\n    } catch (E) {\n      console.log(E);\n    }\n  };\n\n  const handleDemotion = async (id, currentSalary) => {\n    console.log(\"-500 to\", id);\n    try {\n      await api.put(`/salary/${id}`, {\n        id: id,\n        amount: currentSalary - 500,\n      });\n      getSalaries();\n    } catch (E) {\n      console.log(E);\n    }\n  };\n\n  const handlePromotion = async (id, currentSalary) => {\n    console.log(\"+500 to\", id);\n    try {\n      await api.put(`/salary/${id}`, {\n        id: id,\n        amount: currentSalary + 500,\n      });\n      getSalaries();\n    } catch (E) {\n      console.log(E);\n    }\n  };\n\n  const handleFire = async (id) => {\n    console.log(\"deleting id\", id);\n    try {\n      await api.delete(`/users/${id}`);\n      fetchUsers();\n      getSalaries();\n    } catch (E) {\n      console.log(E);\n    }\n  };\n\n  return user.role === \"MANAGER\" ? (\n    <div>\n      <Tabs\n        centered\n        value={value}\n        onChange={handleChange}\n        aria-label=\"simple tabs example\"\n      >\n        <Tab label=\"All Users\" />\n        <Tab label=\"Unverified Users\" />\n        <Tab label=\"Closed Users\" />\n        <Tab label=\"Employees\" />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Role</TableCell>\n              <TableCell>Username</TableCell>\n              <TableCell>Closed</TableCell>\n              <TableCell>Verified</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {allUsers.map((el) => (\n              <TableRow key={el.id}>\n                <TableCell scope=\"row\">{el.id}</TableCell>\n                <TableCell>{el.role}</TableCell>\n                <TableCell>{el.username}</TableCell>\n                <TableCell>{el.closed ? \"true\" : \"false\"}</TableCell>\n                <TableCell>{el.verified ? \"true\" : \"false\"}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Role</TableCell>\n              <TableCell>Username</TableCell>\n              <TableCell>Verified</TableCell>\n              <TableCell>Click to Verify</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {unverifiedUsers.map((el) => (\n              <TableRow key={el.id}>\n                <TableCell scope=\"row\">{el.id}</TableCell>\n                <TableCell>{el.role}</TableCell>\n                <TableCell>{el.username}</TableCell>\n                <TableCell>{el.verified ? \"true\" : \"false\"}</TableCell>\n                <TableCell>\n                  <Button onClick={() => verifyUser(el.id)} variant=\"success\">\n                    Verify User\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Role</TableCell>\n              <TableCell>Username</TableCell>\n              <TableCell>Verified</TableCell>\n              <TableCell>Closed</TableCell>\n              <TableCell>Delete User</TableCell>\n              <TableCell>Open Account</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {closedUsers.map((el) => (\n              <TableRow key={el.id}>\n                <TableCell scope=\"row\">{el.id}</TableCell>\n                <TableCell>{el.role}</TableCell>\n                <TableCell>{el.username}</TableCell>\n                <TableCell>{el.verified ? \"true\" : \"false\"}</TableCell>\n                <TableCell>{el.closed ? \"true\" : \"false\"}</TableCell>\n                <TableCell>\n                  <Button onClick={() => handleFire(el.id)} variant=\"danger\">\n                    Delete\n                  </Button>\n                </TableCell>\n                <TableCell>\n                  <Button onClick={() => openUserAccount(el.id)} variant=\"success\">\n                    Open\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Role</TableCell>\n              <TableCell>Username</TableCell>\n              <TableCell>Salary</TableCell>\n              <TableCell>Promote</TableCell>\n              <TableCell>Demote</TableCell>\n              <TableCell>Fire</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {salary.map((el) => (\n              <TableRow key={el.user.id}>\n                <TableCell scope=\"row\">{el.user.id}</TableCell>\n                <TableCell>{el.user.role}</TableCell>\n                <TableCell>{el.user.username}</TableCell>\n                <TableCell>{el.amount}</TableCell>\n                <TableCell>\n                  <Button\n                    onClick={() => handlePromotion(el.user.id, el.amount)}\n                    variant=\"success\"\n                  >\n                    + $500\n                  </Button>\n                </TableCell>\n                <TableCell>\n                  <Button\n                    onClick={() => handleDemotion(el.user.id, el.amount)}\n                    variant=\"warning\"\n                  >\n                    - $500\n                  </Button>\n                </TableCell>\n                <TableCell>\n                  <Button\n                    onClick={() => handleFire(el.user.id)}\n                    variant=\"danger\"\n                  >\n                    Fire\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TabPanel>\n    </div>\n  ) : (\n    <div>You must login as MANAGER</div>\n  );\n};\nexport default Users;\n","import React from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport Users from \"../Users\";\n\nconst ManagerDashboard = () => {\n  return (\n    <Container maxWidth={false}>\n      <Users />\n    </Container>\n  );\n};\n\nexport default ManagerDashboard;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: \"100%\",\n    width: \"256px\",\n  },\n  avatar: {\n    backgroundColor: colors.indigo[600],\n    height: 56,\n    width: 56,\n  },\n}));\n\nconst Info = ({ className, title, icon, body, ...rest }) => {\n  const classes = useStyles();\n  const Icon = icon;\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardContent>\n        <Grid container justify=\"space-between\" spacing={3}>\n          <Grid item>\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n              {title}\n            </Typography>\n            <Typography color=\"textPrimary\" variant=\"h3\">\n              {body}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <Icon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Info;\n","import React, { Component } from \"react\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport Info from \"../components/Info\";\nimport axios from \"axios\";\n\nclass Warning extends Component {\n  state = { warning: [] };\n\n  componentDidMount() {\n    axios\n      .get(\"/warning\")\n      .then((response) => {\n        console.log(response.data);\n        this.setState({\n          warning: response.data,\n        });\n      })\n      .catch((e) => console.log(e));\n  }\n\n  render() {\n    return (\n      <div className=\"Warnings\">\n        <Info\n          title=\"Warnings\"\n          body={this.state.warning.length}\n          icon={WarningIcon}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Warning;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport UserWarnings from \"../../components/UserWarningCount\";\nimport api from \"axios\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst ChefDashboard = () => {\n  const user = useSelector(({ user }) => user);\n  const [avgRating, setAvgRating] = useState(0);\n\n  const fetchChefAverageRating = async () => {\n    try {\n      let { data: rating } = await api.get(`/rating/chef/${user.id}`, {\n        id: user.id,\n      });\n      setAvgRating(rating);\n    } catch (E) {\n      console.log(E);\n    }\n  };\n\n  useEffect(() => {\n    fetchChefAverageRating();\n  }, []);\n\n  const useStyles = makeStyles(() => ({\n    root: {\n      padding: \"2em\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    info: {\n      alignSelf: \"center\",\n      margin: \"1em\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.info}>\n        <UserWarnings />\n      </div>\n      Average dish rating for {user.username}:\n      <Rating value={parseInt(avgRating)} precision={0.5} readOnly /> (\n      {parseFloat(avgRating).toPrecision(3)})\n    </div>\n  );\n};\n\nexport default ChefDashboard;\n","import { makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport UserWarnings from \"../../components/UserWarningCount\";\n\nconst DelivererDashboard = () => {\n  const role = useSelector(({ user }) => user.role);\n  const username = useSelector(({ user }) => user.username);\n\n  const useStyles = makeStyles(() => ({\n    root: {\n      padding: \"2em\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    info: {\n      alignSelf: \"center\",\n      margin: \"1em\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <h1>Deliverer Dashboard</h1>\n      <div className={classes.info}>\n        <UserWarnings />\n      </div>\n    </div>\n  );\n};\n\nexport default DelivererDashboard;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport ManagerDashboard from \"./ManagerDashboard\";\nimport ChefDashboard from \"./ChefDashboard\";\nimport DelivererDashboard from \"./DelivererDashboard\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: \"100%\",\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const role = useSelector(({ user }) => user.role);\n  const username = useSelector(({ user }) => user.username);\n\n  return (\n    <div className={classes.root}>\n      {\n        role === \"MANAGER\" ?\n        <ManagerDashboard/>\n        :\n        role === \"DELIVERER\" ? \n        <DelivererDashboard/>\n        :\n        role === \"CHEF\" ? \n        <ChefDashboard/>\n        :\n        null\n      }  \n    </div>\n  );\n};\n\nexport default Dashboard;\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Grid, Divider } from \"@material-ui/core/\";\nimport \"./Employee.css\";\n\nfunction Jobs(){\n\n    const [jobs, setJobs] = useState([]);\n    const history = useHistory();\n\n   \n    async function testing() {\n      const jobsapi = await axios.get(url);\n      setJobs(jobsapi.data);\n      return jobsapi;\n    }\n\n    const url = '/jobs/delivery';\n    useEffect( () => {\n      testing();\n    }, [url]);\n\n    console.log(jobs);\n    \n\n    const useStyles = makeStyles({\n      gridContainer:{\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\",\n        paddingTop : \"10px\",\n        paddingBottom : \"10px\",\n        marginLeft : \"20px\",\n        marginRight : \"20px\",\n        marginTop : \"20px\",\n        marginBottom : \"20px\"\n      },\n      root: {\n        maxWidth: 350,\n        width : 320\n      },\n      media: {\n        height: 140,\n      },\n    });\n    const classes = useStyles();\n\n    function acceptJobEvent(orderId){\n      const url = '/jobs/delivery/acceptJob/'+orderId;\n      console.log(url);\n      try{\n        axios.post(url);\n        history.go(0);\n        testing();\n      }\n      catch(E){console.log(E)}\n\n    }\n\n\n    return(\n        <div>\n            {\n              jobs.length ?\n              <Grid container \n              direction = \"row\"\n              justify = \"center\"\n              allignItems = \"center\"\n              spacing = {4} >\n                {jobs.map( job => {\n                if(job.status == 0 && job.order.type == 1)\n                return(\n                  <Grid className = {classes.gridContainer}>\n                    <Card className={classes.root}>\n                      <CardActionArea>\n                        <CardContent>\n                        {console.log(\"JOB TYPE\", job.type)}\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Job Reference# {job.id}\n                          </Typography>\n                          <h6 variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            Order # {job.order.id}\n                            </h6>\n                          <h6> Date: {job.order.date} </h6>\n                          <h6> Customer: {job.order.customer.username} </h6>\n                        </CardContent>\n                      </CardActionArea>\n                      <CardActions>\n                        <Button size=\"small\" color=\"primary\" onClick={() => acceptJobEvent(job.id)}>\n                          Accept Job\n                        </Button>\n                      </CardActions>\n                    </Card>\n                  </Grid>\n                  \n              )})}\n              </Grid>\n              \n              :<div></div>\n       }\n\n        </div>\n\n    );\n\n}\n\nexport default Jobs;","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Card from '@material-ui/core/Card';\nimport { useHistory } from \"react-router-dom\";\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Divider } from \"@material-ui/core/\";\nimport Button from '@material-ui/core/Button';\nimport { useSelector } from \"react-redux\";\nimport \"./Employee.css\";\n\nfunction InProgress(){\n    const username = useSelector(({ user }) => user.username);\n    const [jobs, setJobs] = useState([]);\n    const useStyles = makeStyles({\n      gridContainer:{\n        paddingLeft: \"20px\",\n        paddingRight: \"20px\",\n        paddingTop : \"20px\",\n        paddingBottom : \"20px\",\n        marginLeft : \"20px\",\n        marginRight : \"20px\",\n        marginTop : \"20px\",\n        marginBottom : \"20px\"\n      },\n        root: {\n          maxWidth: 345,\n          width : 320\n        },\n        media: {\n          height: 140,\n        },\n      });\n    const classes = useStyles();\n    const history = useHistory();\n\n      \n    const url = '/jobs/delivery';\n    useEffect( () => {\n      testing();\n    }, [url]);\n\n\n    async function testing() {\n      const jobsapi = await axios.get(url);\n      setJobs(jobsapi.data.filter(a => (\n        a.order.deliveryPerson != null && a.order.deliveryPerson.username == username\n      )))\n      return jobsapi;\n    }\n\n    function cancelJob(orderId){\n      const url = '/jobs/delivery/cancelJob/'+orderId;\n      console.log(url);\n      try{\n        axios.post(url);\n        testing();\n        history.go(0);\n      }\n      catch(E){console.log(E)}\n    }\n\n    function completedJob(orderId){\n        const url = '/jobs/delivery/completed/'+orderId;\n        console.log(url);\n        try{\n          axios.post(url);\n          testing();\n          history.go(0);\n        }\n        catch(E){console.log(E)}\n      }\n\n    return(\n        <div>\n        <div className=\"page-desc-text\">You are currently assigned the following Jobs:</div>\n\n            {\n            jobs.length ? \n            <Grid container \n              direction = \"row\"\n              justify = \"center\"\n              allignItems = \"center\"\n              spacing = {4} >\n                {jobs.map( job => {\n                if(job.status == 1 && job.order.type == 1)\n                return(\n                  <Grid className = {classes.gridContainer}>\n                    <Card className={classes.root}>\n                      <CardActionArea>\n                          <CardContent>\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                              Job Reference# {job.id}\n                          </Typography>\n                          <h6 variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                              Order # {job.order.id}\n                              </h6>\n                          <h6> Date: {job.order.date} </h6>          \n                          <h6> Ordered By: {job.order.customer.username} </h6>     \n                          </CardContent>\n                      </CardActionArea>\n                      <CardActions>\n                          <Button size=\"small\" color=\"primary\" onClick={() => cancelJob(job.id)}>\n                          Cancel Job\n                          </Button>\n                          <Button size=\"small\" color=\"primary\" onClick={() => completedJob(job.id)}>\n                          Complete Job\n                          </Button>\n                      </CardActions>\n                      </Card>\n                  </Grid>        \n              )})}\n              </Grid>\n              \n            : \n            <h3>...</h3>\n        }\n        </div>\n\n    );\n\n}\n\nexport default InProgress;","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./DishForm.scss\";\nimport { useSelector } from \"react-redux\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { faUtensils } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n  const DishForm = () => {\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [imageUrl, setImageUrl] = useState(\"\");\n    const [special,setSpecial] = useState(false);\n    const [keyWord, setKeyWord] = useState([]);\n    const [allkeyWord, setAllKeyWord] = useState([\"Sweet\",\"Cake\",\"Breakfast\",\"Lunch\",\"Dinner\"]);\n    const [currWord, setcurrKeyWord] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [open,setOpen] = useState(false);\n    const id = useSelector(({ user }) => user.id);\n  \n    function Alert(props) {\n      return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n    \n    function handleNameChange(e) {\n      setName(e.target.value);\n    }\n\n    const handleDescriptionChange = (e) =>{\n      setDescription(e.target.value);\n    }\n\n    const handleImageUrlChange = (e) =>{\n      setImageUrl(e.target.value);\n    }\n\n    const handlePriceChange = (e) =>{\n      setPrice(e.target.value);\n    }\n\n    const handleSpecialChange = (e) =>{\n      setSpecial(e.target.value);\n    }\n\n    const handleKeyword = (e) => {\n      e.persist();\n      console.log(keyWord.includes(e.target.value));\n      if (keyWord.includes(e.target.value)) {\n        setKeyWord((prev) => prev.filter((word) => word != e.target.value));\n      } else {\n        setKeyWord((word) => [...word, e.target.value]);\n      }\n      console.log(keyWord);\n    };\n    \n    const handleSubmission = async (e) =>{\n      e.preventDefault();\n      // console.log(keyWord);\n      // console.log(id);\n      // console.log(price);\n      // console.log(description);\n      setOpen(true);\n      if (keyWord.length != 0){\n        try {\n          let { data } = await axios.post(\"/menu\",{\n            chef : {id},\n            price : price,\n            description : description,\n            imageUrl : imageUrl,\n            name : name,\n            special : special\n          })\n          \n          try{\n            keyWord.map(async word => {\n              await axios.post(\"/keyword\",  {\n                keyWord : word,\n                dish : {id: data.id},\n                chef : {id : id}\n              })}\n            )\n          }catch (error) {}\n          \n          console.log(data)  \n        }catch (error) {}\n      }\n      \n    };\n    \n    const handleCurrkeyword = (e) =>{\n      setcurrKeyWord(e.target.value);\n    }\n\n    const handleAddKeyword = (e) =>{\n      e.persist();\n      e.preventDefault();\n      if (currWord != \"\"){\n        setAllKeyWord(prev => [...prev,currWord]);\n      }\n      \n    }\n\n    const handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n  \n      setOpen(false);\n    };\n\n    return(\n  \n      <div class = \"box\">\n        <form className=\"DishForm\" onSubmit = {handleSubmission}>  \n            <h1 class = \"logo\" align = \"center\">\n            </h1>\n                 \n            {console.log(keyWord)}\n            {console.log(allkeyWord)}\n            {console.log(currWord)}\n            <br></br>\n            <div class = \"input-container\" >\n              <input name=\"Name\"\n              id = \"Name\"\n              value = {name}\n              onChange = {handleNameChange}\n              required/>\n              <label htmlFor = \"Name\">Dish Name</label>\n            </div>\n            <br></br>\n\n            \n            <div class = \"input-container\" align = \"center\">\n              <section align = \"center\">\n                <input \n                  name=\"Description\" \n                  id = \"Description\" \n                  value = {description}\n                  onChange = {handleDescriptionChange}\n                  required/>\n                <label htmlFor = \"Description\"> Enter your Dish's Description</label>\n              </section>\n            </div>\n            <br></br>\n\n            \n  \n\n            <section>\n              <label htmlFor = \"isSpecial\">Special Type</label>\n              <select name=\"isSpecial\" \n              id = \"isSpecial\"\n              value = {special}\n              onChange = {handleSpecialChange}\n              required>\n                <option value = {false}>Not Special</option>\n                <option value = {true}>Special</option>\n              </select>\n            </section>\n\n            <br></br>\n            <div class = \"input-container\" align = \"center\">\n              <section align = \"center\">\n\n                <input name=\"image\" \n                id = \"image\" \n                value = {imageUrl}\n                onChange = {handleImageUrlChange}\n                required />\n                <label htmlFor = \"image\">Enter a valid image URL </label>\n              </section>\n            </div>\n            \n            <br></br>\n\n\n            <div class = \"input-container\" align = \"center\">\n              <section align = \"center\">\n                <input type = \"number\" \n                name=\"price\" \n                id = \"price\"\n                min = \"0.00\" \n                step = \"0.50\"\n                value = {price}\n                onChange = {handlePriceChange}\n                required/>\n                <label htmlFor = \"price\">Price: </label>\n              </section>\n            </div>\n            \n\n            <br></br>\n            \n          <section align = \"center\">\n            <span>Give your Dish Some Keywords for people to find it :  (check at least one)</span>\n            <br></br>\n\n            {allkeyWord.map(word => \n              <>\n              <label align = \"center\" class=\"custom-checkbox\" htmlFor = {word}> {word} \n              <input type=\"checkbox\"  name = {word} id = {word} value = {word} onChange = {handleKeyword}/>\n              <span class=\"checkmark\"></span>\n              </label>\n              </>\n              )}\n          </section>\n\n              <br></br>\n              \n          <div class = \"input-container\" align = \"center\">\n            <section>\n              <input name=\"other\" id = \"other\"  onChange = {handleCurrkeyword} value = {currWord} />\n              <label htmlFor = \"other\">Other keywords: </label>\n            </section>\n          </div>\n\n          <section align = \"center\">\n              <button className=\"dishform-btn\"  onClick={handleAddKeyword}>\n                Add Keywords\n              </button>\n          </section>\n          <br></br>\n\n          <section align = \"center\">\n            <input type=\"submit\" />\n          </section>\n\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"success\">\n              This is a success message!\n            </Alert>\n          </Snackbar>\n            \n        </form>\n      </div>\n        \n  \n        \n    );\n\n}\n\nexport default DishForm;","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Divider } from \"@material-ui/core/\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst ChefJob = () =>{\n    const [chefJob,setChefJob] = useState([]);\n    const history = useHistory();\n\n\n    // const getJobs = async() =>{\n    //     try{\n    //         let{\n    //             data : jobs\n    //         } = await axios.get(\"/jobs/chefJob/false\");\n    //         setChefJob(jobs);\n    //         console.log(jobs);\n    //     }catch(error){console.log(error)};\n    // }\n    const url = \"/jobs/chefJob/false\"\n    const loadData = async () => {\n      const CancelToken = axios.CancelToken;\n      const source = CancelToken.source();\n      try {\n    \n        axios.get(url, { cancelToken: source.token }).then(element => \n        {\n            console.log(element.data);\n          //  console.log(element.data.order.id);\n            let newData = element.data.map((element) =>({\n                jobId : element.id,\n                jobStatus : element.completed,\n                orderId : element.order.id,\n                orderTime : element.order.date,\n                customerName: element.order.customer.username,\n                quantity : element.order.dishOrders[0].quantity,\n                dishName : element.order.dishOrders[0].dish.name,\n                dishImage : element.order.dishOrders[0].dish.imageUrl\n            }))\n          setChefJob( newData);\n        });\n      } catch (error) {\n        if (axios.isCancel(error)) {\n          console.log(\"cancelled\");\n        } else {\n          throw error;\n        }\n        return () => {\n          source.cancel();\n        }\n      \n      };\n    };\n\n\n    useEffect(() => {\n        \n      loadData();\n    \n  }, []);\n\n    \n    // async function testing() {\n    //     const jobsapi = await axios.get(url);\n    //     setChefJob(jobsapi.data);\n    //     return jobsapi;\n    //   }\n  \n    //   const url = '/jobs/chefJob/false';\n    //   useEffect( () => {\n    //     testing();\n    //   }, [url]);\n  \n      console.log(chefJob);\n\n\n    const useStyles = makeStyles({\n    gridContainer:{\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      paddingTop : \"20px\",\n      paddingBottom : \"20px\",\n      marginLeft : \"20px\",\n      marginRight : \"20px\",\n      marginTop : \"20px\",\n      marginBottom : \"20px\"\n    },\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 175,\n        width : 300\n    },\n    });\n\n    const classes = useStyles();\n    \n    const handleComplete = async (id) => {\n        const url = \"/jobs/chefJob/\" + id;\n        console.log(url);\n        try{\n            axios.post(url);\n            history.go(0);\n            loadData();\n        }catch(error){console.log(error)}\n\n    }\n\n\n\n  return (\n      <div>\n        {\n         <Grid container \n            direction = \"row\"\n            justify = \"center\"\n            allignItems = \"center\"\n            spacing = {4} >\n            {chefJob.map(job => {\n              if (job.jobStatus === false)\n                  return(\n                    <Grid className = {classes.gridContainer}>\n                      <Card className={classes.root}>\n                            <CardActionArea>\n                                <CardMedia\n                                className={classes.media}\n                                image={job.dishImage}\n                                title=\"dish\"   //name of the dish goes here\n                                />\n                                <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    Job Reference # {job.jobId}\n                                </Typography>\n                                <h6 variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                    Order # {job.orderId}\n                                </h6>\n                                <h6> Date: {job.orderTime} </h6>\n                                <h6> Dish: {job.dishName}  ||  QTY. {job.quantity} </h6>\n                                <h6> Ordered By: {job.customerName}</h6>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActions>\n                                <Button size=\"small\" color=\"primary\" onClick = { () => handleComplete(job.jobId)}>\n                                    Mark Completed!\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n    \n                  )\n            })}\n          </Grid>\n\n        }\n\n        </div>\n    \n  );\n\n};\n\nexport default ChefJob;","import React, { useState, useEffect } from \"react\";\nimport api from \"axios\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { Button, Form } from \"react-bootstrap\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst DelivererRateCustomer = () => {\n  const [allDelivererJobs, setAllDelivererJobs] = useState([]);\n  const username = useSelector(({ user }) => user.username);\n  const [userComment, setUserComment] = useState('');\n  const [userRating, setUserRating] = useState(2.5);\n  const history = useHistory();\n\n  const fetchAllDelivererJobs = async () => {\n    try{\n      let {\n        data: res\n      } = await api.get(`/jobs/delivery`)\n      setAllDelivererJobs(res.filter(a => (\n        a.order.deliveryPerson != null && a.order.deliveryPerson.username == username\n      )))\n    }\n    catch(E){console.log(E)};\n  };\n\n  const handleUserCommentChange = (e) => {\n    setUserComment(e.target.value);\n  };\n\n  useEffect( () => {\n    fetchAllDelivererJobs();\n  },[]);\n\n  const handleRateCustomer = async (e,id,orderId) => {\n    e.preventDefault();\n    try{\n      await api.post(`/rating/users/add`,{\n        rating: parseFloat(userRating),\n        comments: userComment,\n        person: { id },\n        order: { id : orderId }\n      })\n\n      try{\n        console.log(\"post req\")\n        await api.post(`/orders/userRated/${orderId}`);\n      } catch(E) {console.log(E)};\n\n      history.go(0);\n    }\n    catch(E){console.log(E)};\n  };\n\n  return(\n    <div style={{margin:\"auto\", textAlign:\"center\"}}>\n      {console.log(allDelivererJobs)}\n      <h1>\n        My Deliveries\n      </h1>\n      <Table aria-label=\"simple table\" style={{textAlign:\"center\"}} > \n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Order ID</TableCell>\n            <TableCell align=\"center\">Ordered By</TableCell>\n            <TableCell align=\"center\">Status</TableCell>\n            <TableCell align=\"center\">Rate Customer</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            allDelivererJobs.map( (el) => (\n              <TableRow key={el.id}>\n                <TableCell align=\"center\" scope=\"row\">\n                  {el.order.id}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {el.order.customer.username}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {el.status == 1 ?\n                    <Button variant=\"warning\" disabled>\n                      In Progress\n                    </Button>\n                    : el.status == 2 ?\n                    <Button variant=\"success\" disabled>\n                      Completed\n                    </Button>\n                    : <>el.status</>\n                  }\n                </TableCell>\n                <TableCell align=\"center\">\n                  {el.status == 2 ?\n                    !el.order.userRated ?\n                    <div>\n                      <Form onSubmit={(e) => handleRateCustomer(e,el.order.customer.id,el.order.id)}> \n                        <div style={{width: \"200px\",margin:\"auto\"}}>\n                          <Form.Group>\n                            <Form.Control value={userComment} onChange={handleUserCommentChange} required placeholder=\"Rating Comment\"/>\n                          </Form.Group>\n                          <Rating style={{marginBottom:\"10px\"}}\n                            name=\"controlled\"\n                            value={userRating}\n                            required\n                            precision={.5}\n                            onChange={(event, newValue) => {\n                              setUserRating(newValue);\n                            }}\n                          />\n                        </div>\n                        <Button variant=\"primary\" type=\"submit\">\n                          Submit Rating\n                        </Button>\n                      </Form>\n                    </div>\n                    :\n                      <Button variant=\"success\" disabled>\n                        Rating Submitted!\n                      </Button>\n                    :\n                    <Button variant=\"danger\" disabled>\n                      Delivery Not Completed Yet\n                    </Button>\n                  }\n                </TableCell>\n              </TableRow>\n            ))\n          }\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default DelivererRateCustomer;","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useEffect } from \"react\";\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport {\n  AlertCircle as AlertCircleIcon,\n  BarChart as BarChartIcon,\n  Lock as LockIcon,\n  Settings as SettingsIcon,\n  ShoppingBag as ShoppingBagIcon,\n  User as UserIcon,\n  UserPlus as UserPlusIcon,\n  Users as UsersIcon,\n  DollarSign as DollarSignIcon,\n  List as ListIcon,\n  XCircle as XCircleIcon,\n  Briefcase as Briefcase,\n  Clipboard as ClipboardIcon,\n  Truck as TruckIcon,\n  Coffee as coffee,\n  CheckCircle as CheckCircleIcon,\n  Star as StarIcon,\n} from \"react-feather\";\nimport NavItem from \"./NavItem\";\nimport { useSelector } from \"react-redux\";\n\nconst user = {\n  username: \"Username\",\n  name: \"Katarina Smith\",\n};\n\nconst useStyles = makeStyles(() => ({\n  mobileDrawer: {\n    width: 256,\n  },\n  desktopDrawer: {\n    width: 256,\n    top: 64,\n    height: \"calc(100% - 64px)\",\n  },\n  avatar: {\n    cursor: \"pointer\",\n    width: 64,\n    height: 64,\n  },\n  status: {\n    fontSize: \".95em\",\n    fontWeight: 800,\n  },\n}));\n\nconst NavBar = ({ onMobileClose, openMobile }) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const role = useSelector(({ user }) => user.role);\n  const username = useSelector(({ user }) => user.username);\n\n  const ShowStatus = () => {\n    let Status;\n    if ([\"VIP\", \"DELIVERER\", \"CHEF\", \"MANAGER\"].includes(role)) {\n      Status = () => <span>{role}</span>;\n    } else {\n      Status = () => <span>REGULAR CUSTOMER</span>;\n    }\n    return (\n      <div className={classes.status}>\n        Status: <Status />\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const customerSidebar = (\n    <List>\n      <NavItem\n        href=\"/customer/balance\"\n        key=\"Add Balance\"\n        title=\"Add Balance\"\n        icon={DollarSignIcon}\n      />\n      <NavItem\n        href=\"/customer/orders\"\n        key=\"Order History\"\n        title=\"Order History\"\n        icon={ListIcon}\n      />\n      <NavItem href=\"/customer/info\" key=\"Info\" title=\"Info\" icon={UserIcon} />\n      <NavItem\n        href=\"/customer/reservations\"\n        key=\"Reservations\"\n        title=\"Reservations\"\n        icon={CheckCircleIcon}\n      />\n      <NavItem\n        href=\"/myReviews\"\n        key=\"Reviews\"\n        title=\"Reviews\"\n        icon={ListIcon}\n      />\n    </List>\n  );\n\n  const delivererSidebar = (\n    <List>\n      <NavItem\n        href=\"/employee/jobs\"\n        key=\"Jobs\"\n        title=\"Job Center\"\n        icon={Briefcase}\n      />\n\n      <NavItem\n        href=\"/employee/currentJobs\"\n        key=\"CurrentJobs\"\n        title=\"Accepted Jobs\"\n        icon={TruckIcon}\n      />\n\n      <NavItem\n        href=\"/myReviews\"\n        key=\"Reviews\"\n        title=\"Reviews\"\n        icon={ListIcon}\n      />\n\n      <NavItem\n        href=\"/employee/rateCustomer\"\n        key=\"RateCustomer\"\n        title=\"Rate a Customer\"\n        icon={StarIcon}\n      />\n    </List>\n  );\n\n  const chefSidebar = (\n    <List>\n      <NavItem\n        href=\"/employee/createDish\"\n        key=\"Create Dish!\"\n        title=\"Create Dish!\"\n        icon={coffee}\n      />\n      <NavItem\n        href=\"/employee/CookJobs\"\n        key=\"Cook Jobs\"\n        title=\"Cook Jobs\"\n        icon={coffee}\n      />\n    </List>\n  );\n\n  const managerSidebar = (\n    <List>\n      <NavItem\n        href=\"/employee/users\"\n        key=\"All Users\"\n        title=\"All Users\"\n        icon={UsersIcon}\n      />\n      <NavItem\n        href=\"/employee/taboo\"\n        key=\"Taboo Words\"\n        title=\"Taboo Words\"\n        icon={XCircleIcon}\n      />\n      <NavItem\n        href=\"/employee/complaints\"\n        key=\"Complaints\"\n        title=\"Complaints\"\n        icon={ClipboardIcon}\n      />\n      <NavItem\n        href=\"/employee/managerorders\"\n        key=\"Orders\"\n        title=\"Orders\"\n        icon={ListIcon}\n      />\n    </List>\n  );\n\n  const customerAvatar = (\n    <Avatar\n      className={classes.avatar}\n      component={RouterLink}\n      to={\"/customer\"}\n    />\n  );\n\n  const employeeAvatar = (\n    <Avatar\n      className={classes.avatar}\n      component={RouterLink}\n      to={\"/employee\"}\n    />\n  );\n\n  const content = (\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\n        {role === \"MANAGER\" || role === \"CHEF\" || role === \"DELIVERER\"\n          ? employeeAvatar\n          : customerAvatar}\n        <Typography\n          className={classes.name}\n          color=\"textPrimary\"\n          variant=\"h5\"\n          style={{ marginTop: \"16px\" }}\n        >\n          <ShowStatus />\n        </Typography>\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\n          Username: {username}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box p={2}>\n        {role === \"CUSTOMER\" || role === \"VIP\"\n          ? customerSidebar\n          : role === \"MANAGER\"\n          ? managerSidebar\n          : role === \"DELIVERER\"\n          ? delivererSidebar\n          : role === \"CHEF\"\n          ? chefSidebar\n          : null}\n      </Box>\n      <Box flexGrow={1} />\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.desktopDrawer }}\n          open\n          variant=\"persistent\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool,\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false,\n};\n\nexport default NavBar;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport NotificationsIcon from \"@material-ui/icons/NotificationsOutlined\";\nimport InputIcon from \"@material-ui/icons/Input\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCartPlus,\n  faBriefcase,\n  faCookieBite,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { logout } from \"../../../redux/actions/user\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport './TopBar.css'\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60,\n  },\n}));\n\nconst TopBar = ({ className, onMobileNavOpen, ...rest }) => {\n  const classes = useStyles();\n  const [notifications] = useState([]);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const user = useSelector(({ user }) => user);\n\n  const handleLogout = async () => {\n    dispatch(logout(history));\n    history.go(0);\n  };\n\n  return (\n    <AppBar className={clsx(classes.root, className)} elevation={0}  {...rest}>\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <FontAwesomeIcon icon={faCookieBite} size=\"2x\" color=\"white\" />\n        </RouterLink>\n        <Box flexGrow={1} />\n        <Hidden mdDown>\n          <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <IconButton onClick={handleLogout} color=\"inherit\">\n            <InputIcon />\n          </IconButton>\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func,\n};\n\nexport default TopBar;\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      dark: '#F4F6F8',\n      default: colors.common.white,\n      paper: colors.common.white\n    },\n    primary: {\n      main: colors.indigo[500]\n    },\n    secondary: {\n      main: colors.indigo[500]\n    },\n    text: {\n      primary: colors.blueGrey[900],\n      secondary: colors.blueGrey[600]\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport SideBar from \"./NavBar/SideBar\";\nimport TopBar from \"./NavBar/TopBar\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./theme\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: \"flex\",\n    height: \"100%\",\n    overflow: \"hidden\",\n    width: \"100%\",\n  },\n  wrapper: {\n    display: \"flex\",\n    flex: \"1 1 auto\",\n    overflow: \"hidden\",\n    paddingTop: 64,\n    [theme.breakpoints.up(\"lg\")]: {\n      paddingLeft: 256,\n    },\n  },\n  contentContainer: {\n    display: \"flex\",\n    flex: \"1 1 auto\",\n    overflow: \"hidden\",\n  },\n  content: {\n    flex: \"1 1 auto\",\n    height: \"100%\",\n    overflow: \"auto\",\n  },\n}));\n\nconst DashboardLayout = ({ children }) => {\n  const classes = useStyles();\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n\n      <div className={classes.root}>\n        <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n        <SideBar\n          onMobileClose={() => setMobileNavOpen(false)}\n          openMobile={isMobileNavOpen}\n        />\n        <div className={classes.wrapper}>\n          <div className={classes.contentContainer}>\n            <div className={classes.content}>{children}</div>\n          </div>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default DashboardLayout;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { isEmpty } from \"lodash\";\nimport { logout } from \"../../redux/actions/user\";\n\nimport {\n  Nav,\n  Navbar,\n  NavDropdown,\n  Form,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUserAlt,\n  faBriefcase,\n  faCookieBite,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst NavBar = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const user = useSelector(({ user }) => user);\n\n  const handleLogout = async () => {\n    dispatch(logout(history));\n    history.go(0);\n  };\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n      <Link to=\"/\" style={{paddingRight:\"10px\"}}>\n        <img\n          src=\"/Online-Restaurant-System-Frontend/Grannys_sweets_logo.png\"\n          width=\"151px\"\n          height=\"55px\"\n          alt=\"dish\"\n        />\n      </Link>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse>\n        <Nav className=\"mr-auto\">\n          <Link to=\"/menu\">\n            <Navbar.Text>Menu</Navbar.Text>\n          </Link>\n          <Link to=\"/chefs\">\n            <Navbar.Text>Chefs</Navbar.Text>\n          </Link>\n          <Link to=\"/discussions\">\n            <Navbar.Text>Discussions</Navbar.Text>\n          </Link>\n          {!isEmpty(user) && user.role == \"VIP\" && (\n          <Link to=\"/vipMenu\">\n            <Navbar.Text>VIP</Navbar.Text>\n          </Link>\n          )}\n        </Nav>\n        {isEmpty(user) && (\n          <Link to=\"/signin\">\n            <Navbar.Text>Sign-In</Navbar.Text>\n          </Link>\n        )}\n        {!isEmpty(user) && (\n          <Navbar.Text onClick={handleLogout} className=\"nav-logout-text\">\n            Logout\n          </Navbar.Text>\n        )}\n        {!isEmpty(user) && (user.role === \"CUSTOMER\" || user.role === \"VIP\") && (\n          <NavDropdown\n            title={\n              <FontAwesomeIcon icon={faUserAlt} size=\"2x\" color=\"white\" />\n            }\n            id=\"collapsible-nav-dropdown\"\n            color=\"white\"\n            alignRight\n          >\n            <NavDropdown.Item as={Link} to=\"/customer\">\n              Account\n            </NavDropdown.Item>\n          </NavDropdown>\n        )}\n        {!isEmpty(user) && ![\"CUSTOMER\", \"VIP\"].includes(user.role) && (\n          <NavDropdown\n            title={\n              <FontAwesomeIcon icon={faBriefcase} size=\"2x\" color=\"white\" />\n            }\n            id=\"collapsible-nav-dropdown\"\n            color=\"white\"\n            alignRight\n          >\n            <NavDropdown.Item as={Link} to=\"/employee\">\n              Account\n            </NavDropdown.Item>\n          </NavDropdown>\n        )}\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport NavBar from \"./NavBar\";\n\nconst CustomerLayout = ({ children }) => {\n  return (\n    <>\n      <NavBar />\n      {children}\n    </>\n  );\n};\n\nexport default CustomerLayout;\n","import React from \"react\";\n\nconst Closed = () => {\n  return <div>Account Closed</div>;\n};\n\nexport default Closed;\n","import React from \"react\";\n\nconst Unverified = () => {\n  return <div>You must wait until manager verifies your account!</div>;\n};\n\nexport default Unverified;\n","import React from \"react\";\nimport AuthUserLayout from \"./AuthUser\";\nimport UserLayout from \"./User\";\nimport authPage from \"../auth\";\n\nconst Layout = ({ page, isPrivate, type, ...props }) => {\n  //Need to use user role\n  const Page = authPage(page, isPrivate);\n\n  return (\n    <>\n      {type === \"authUser\" ? (\n        <AuthUserLayout {...props}>\n          <Page {...props} />\n        </AuthUserLayout>\n      ) : (\n        <UserLayout {...props}>\n          <Page {...props} />\n        </UserLayout>\n      )}\n    </>\n  );\n};\n\nexport default Layout;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUser } from \"./redux/actions/user\";\nimport { isEmpty } from \"lodash\";\nimport ClosedPage from \"./pages/Closed\";\nimport UnverifiedPage from \"./pages/Unverified\";\n\nexport default (OriginalComponent, isPrivate = false) => {\n  class ComposedComponent extends Component {\n    checkAuth = async () => {\n      //const user = this.props.user;\n      const user = await this.props.getUser(localStorage.getItem(\"userId\"));\n      if (isEmpty(user) && isPrivate) {\n        return this.props.history.push(\"/signin\");\n      }\n      if (!isEmpty(user)) {\n        if (\n          this.props.location.pathname === \"/signin\" ||\n          this.props.location.pathname === \"/signup\" ||\n          ([\"CUSTOMER\", \"VIP\"].includes(user.role) &&\n            this.props.location.pathname.startsWith(\"/employee\")) ||\n          (![\"CUSTOMER\", \"VIP\"].includes(user.role) &&\n            this.props.location.pathname.startsWith(\"/customer\"))\n        ) {\n          this.props.history.push(\"/\");\n        }\n      }\n    };\n\n    componentDidMount() {\n      this.checkAuth();\n    }\n\n    render() {\n      const user = this.props.user;\n      if (!isEmpty(user) && user.closed && isPrivate) {\n        return <ClosedPage {...this.props} />;\n      } else if (!isEmpty(user) && !user.verified && isPrivate) {\n        return <UnverifiedPage {...this.props} />;\n      }\n      return <OriginalComponent {...this.props} />;\n    }\n  }\n\n  const mapStateToProps = ({ user }) => {\n    return {\n      user,\n    };\n  };\n\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      getUser: (id) => dispatch(getUser(id)),\n    };\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(ComposedComponent);\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport UserWarnings from \"../components/UserWarningCount\";\nimport api from \"axios\";\nimport { Grid, Divider, makeStyles } from \"@material-ui/core/\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Rating from \"@material-ui/lab/Rating\";\nconst Customer = () => {\n  const user = useSelector(({ user }) => user);\n  const [data, setData] = useState([]);\n  const url = \"/rating/dishrating/\" + user.id;\n\n  const loadData = async () => {\n    try {\n      const ratingList = await api.get(url);\n      if (ratingList.data.length != 0) {\n        setData(ratingList.data.sort((a, b) => b.rating - a.rating));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const useStyles = makeStyles(() => ({\n    root: {\n      padding: \"2em\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    info: {\n      alignSelf: \"center\",\n      margin: \"1em\",\n    },\n  }));\n\n  const classes = useStyles();\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.info}>\n        <UserWarnings />\n      </div>\n      {data.length != 0 ? (\n        <div>\n          <h1 align=\"center\">\n            These are the top 3 dishes that you have Highly rated!\n          </h1>\n          <div className=\"menu-items-container\">\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n              {data.slice(0, 3).map((el) => (\n                <Grid item key={el.dish.id}>\n                  <div className=\"item-container\">\n                    <div className=\"dish-img-container\">\n                      <img\n                        onError={(event) => {\n                          event.target.src =\n                            \"/Online-Restaurant-System-Frontend/favicon.ico\";\n                        }}\n                        src={el.dish.imageUrl}\n                        width=\"298\"\n                        height=\"200\"\n                        alt=\"dish\"\n                      />\n                    </div>\n                    <Divider />\n\n                    {el.dish.special ? (\n                      <div className=\"dish-title-container\">\n                        {el.dish.name}\n                        <button className=\"special-btn\"> VIP </button>\n                      </div>\n                    ) : (\n                      <div className=\"dish-title-container\">\n                        {el.dish.name}{\" \"}\n                      </div>\n                    )}\n                    <div className=\"rating-container\">\n                      <Rating\n                        name=\"hover-feedback\"\n                        value={el.rating}\n                        precision={0.5}\n                      />\n                    </div>\n                    {el.dish.description.length > 71 ? (\n                      <div className=\"dish-desc-container\">\n                        {el.dish.description.substring(0, 71) + \" ...\"}\n                      </div>\n                    ) : (\n                      <div className=\"dish-desc-container\">\n                        {el.dish.description}\n                      </div>\n                    )}\n                    <div className=\"price-add-btn-container\">\n                      <div align=\"center\" className=\"dish-price-container\">\n                        ${el.dish.price}\n                      </div>\n                    </div>\n                  </div>\n                </Grid>\n              ))}\n            </Grid>\n          </div>\n        </div>\n      ) : (\n        <div>\n          {\" \"}\n          <h3 align=\"center\">\n            You do not have your Top 3 rated dishes yet... Order something and\n            rate it for your top 3 to appear here!{\" \"}\n          </h3>{\" \"}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Customer;\n","import React, { useState, useEffect } from \"react\";\nimport api from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Button, Form } from \"react-bootstrap\";\n\nconst Taboo = () => {\n  const user = useSelector(({ user }) => user);\n  const [newTabooWord, setnewTabooWord] = useState('')\n  const [tabooWords, setTabooWords] = useState([]);\n\n  const getTabooWords = async () => {\n    try{\n      let {\n        data: taboowords\n      } = await api.get(`/tabooword`);\n      setTabooWords(taboowords);\n    }\n    catch(E){console.log(E)};\n    };\n\n  const handleChange = (e) => {\n    setnewTabooWord(e.target.value);\n  };\n\n  const addNewTabooWord = async (event) => {\n    event.preventDefault();\n\n    try{\n      await api.post(`/tabooword`,{\n        word: newTabooWord\n      });\n      getTabooWords();\n      setnewTabooWord('');\n    }\n    catch(E){console.log(E)}\n  };\n\n  const removeWord = async (id) => {\n    console.log(\"deleting taboo word id:\", id);\n    try {\n      await api.delete(`/tabooword/${id}`,{\n        wordid: id\n      });\n      getTabooWords();\n    }\n    catch(E){console.log(E)}\n  };\n\n  useEffect( () =>{\n    getTabooWords();\n  }, []);\n\n  return (\n    <div style={{width: \"80%\",margin:\"auto\", textAlign:\"center\"}}>\n      <h1 style={{marginBottom: \"10px\"}}>\n        List of Taboo Words\n      </h1>\n      <Table aria-label=\"simple table\" style={{width: \"50%\",margin:\"auto\", textAlign:\"center\"}} > \n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">ID</TableCell>\n            <TableCell align=\"center\">Word</TableCell>\n            <TableCell align=\"center\">Remove Word</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            tabooWords.map( (el) => (\n              <TableRow key={el.id}>\n                <TableCell align=\"center\" scope=\"row\">\n                  {el.id}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {el.word}\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Button onClick={() => removeWord(el.id)} variant=\"danger\">\n                    Remove\n                  </Button>\n                </TableCell>  \n              </TableRow>\n            ))\n          }\n        </TableBody>\n      </Table>\n      <div style={{width: \"80%\",margin:\"auto\", textAlign:\"center\", marginTop:\"25px\"}}>\n        <h1>\n          Add Taboo Word\n        </h1>\n        <Form onSubmit={addNewTabooWord}> \n          <div style={{width: \"250px\",margin:\"auto\"}}>\n            <Form.Group controlId=\"formBasicTabooWord\">\n              <Form.Control value={newTabooWord} placeholder=\"Enter word\" onChange={handleChange}/>\n            </Form.Group>\n          </div>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Taboo;","import React, { useState, useEffect } from \"react\";\nimport api from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useHistory } from \"react-router-dom\";\nimport { Button,Form } from \"react-bootstrap\";\n\nconst Complaints = () => {\n  const [complaints, setComplaints] = useState([]);\n  const user = useSelector(({ user }) => user);\n  const [denyMesg,setDenyMesg] = useState('');\n  const history = useHistory();\n\n  const fetchComplaints = async() => {\n    try{\n      let {\n        data: allClaims\n      } = await api.get(`/claims`);\n      setComplaints(allClaims);\n    }\n    catch(E){console.log(E)};\n  };\n\n  const approveClaim = async(claimId) => {\n    try{\n      await api.post(`claims/approveClaim/${claimId}`,{\n      });\n      await api.delete(`/claims/${claimId}`,{\n      });\n      fetchComplaints();\n    }\n    catch(E){console.log(E)};\n  };\n\n  const denyComplaint = (claimId) => {\n    try{\n      api.post(`claims/denyClaim/${claimId}`,{\n        message: denyMesg,\n      });\n      api.delete(`/claims/${claimId}`,{\n      });\n      history.go(0);\n      //fetchComplaints();\n      //setDenyMesg('');\n    }\n    catch(E){console.log(E)};\n  };\n\n  const handleChange = (e) => {\n    setDenyMesg(e.target.value);\n  };\n\n  useEffect( () =>{\n    fetchComplaints();\n  }, []);\n\n  return (\n    <div style={{margin:\"auto\", textAlign:\"center\"}}>\n      {console.log(complaints)}\n      <h1 style={{marginBottom: \"10px\"}}>\n        List of Pending Claims\n      </h1>\n      <Table aria-label=\"simple table\"> \n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Complaint ID</TableCell>\n            <TableCell align=\"center\">Complaint Message</TableCell>\n            <TableCell align=\"center\">Complaint By</TableCell>\n            <TableCell align=\"center\">Complaint Role</TableCell>\n            <TableCell align=\"center\">Approve (rating for complainant removed)</TableCell>\n            <TableCell align=\"center\">Deny (warning issued to complainant)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            complaints.map( (el) => (\n              <TableRow key={el.id}>\n                <TableCell align=\"center\" scope=\"row\">\n                  {el.id}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {el.message}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {el.victim.username}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {el.victim.role}\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Button onClick={() => approveClaim(el.id)} variant=\"success\">\n                    Approve\n                  </Button>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Form onSubmit={() => denyComplaint(el.id)}> \n                    <Form.Group controlId=\"formBasicDenyMesg\">\n                      <Form.Control value={denyMesg} placeholder=\"Enter message\" onChange={handleChange}/>\n                    </Form.Group>\n                    <Button variant=\"danger\" type=\"submit\">\n                      Deny\n                    </Button>\n                  </Form>\n                </TableCell>\n              </TableRow>\n            ))\n          }\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default Complaints;","import React, { useState, useEffect } from \"react\";\nimport api from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Button,Form } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Reviews.css\";\n\n\nfunction Reviews() {\n  const user = useSelector(({ user }) => user);  \n  const [reviews, setReviews] = useState([]);\n  const [userComment, setUserComment] = useState('');\n  const history = useHistory();\n\n  useEffect( () =>{\n    const getReviews = async() => {\n        try{\n          let { data: json } = await api.get(`rating/users/me`);\n          setReviews(json);\n        }\n        catch(E){console.log(E)};\n      };\n\n      getReviews();\n  }, []);\n\n  const handleUserCommentChange = (e) => {\n    setUserComment(e.target.value);\n  };\n\n  const handleSubmitClaim = async (e,id) => {\n    e.preventDefault();\n    try{\n      await api.post(`/claims/submitClaim`,{\n        message: userComment,\n        userRating: {id: id},\n        victim: {id: user.id}\n      })\n      history.go(0);\n    }\n    catch(E){console.log(E)};\n  };\n\n//   const theme = {\n//     blue: {\n//       default: \"#3f51b5\",\n//       hover: \"#283593\"\n//     },\n//   };\n\n  return (\n    <div style={{margin:\"auto\", textAlign:\"center\"}}>\n      <h1 style={{marginBottom: \"10px\"}}>\n        My Ratings\n      </h1>\n      {console.log(reviews)}\n      <Table aria-label=\"simple table\"> \n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Review ID</TableCell>\n            <TableCell align=\"center\">Rating</TableCell>\n            <TableCell align=\"center\">Comments</TableCell>\n            <TableCell align=\"center\">Submit Claim</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            reviews.map( (el) => {\n              console.log(\"TYPE\", el);\n              console.log(\"TYPE\", el.type);\n              if(el.type == 0) \n              return(\n              <TableRow key={el.id}>\n                <TableCell align=\"center\" scope=\"row\">\n                  {el.id}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {el.rating > 3 ? \n                   <Button variant=\"primary\"> {el.rating} </Button>\n                  : \n                  <Button variant=\"danger\"> {el.rating} </Button> \n                }  \n                </TableCell>\n                <TableCell align=\"center\">\n                  <h6> {el.comments} </h6>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Form onSubmit={(e) => handleSubmitClaim(e,el.id)}> \n                    <div style={{width: \"200px\",margin:\"auto\"}}>\n                      <Form.Group>\n                        <Form.Control value={userComment} onChange={handleUserCommentChange} required placeholder=\"Claim Message\"/>\n                      </Form.Group>\n                    </div>\n                    <Button variant=\"primary\" type=\"submit\">\n                      Submit Claim\n                    </Button>\n                  </Form>\n                </TableCell>\n              </TableRow>\n            )})\n          }\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default Reviews;","import React, { useState, useEffect } from \"react\";\nimport api from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Button } from \"react-bootstrap\";\n\nconst ManagerOrders = () => {\n  const [allOrders, setAllOrders] = useState([]);\n  \n  const fetchAllOrders = async () => {\n    try{\n      let {\n        data: orders\n      } = await api.get(`/orders`);\n      setAllOrders(orders);\n    }\n    catch(E){console.log(E)};\n  };\n\n  useEffect( () =>{\n    fetchAllOrders();\n  }, []);\n\n  return (\n    <div style={{margin:\"auto\", textAlign:\"center\"}}>\n      {console.log(allOrders)}\n      <h1>\n        All Placed Orders\n      </h1>\n      <Table aria-label=\"simple table\" style={{textAlign:\"center\"}} > \n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Order ID</TableCell>\n            <TableCell align=\"center\">Ordered By</TableCell>\n            <TableCell align=\"center\">Date Placed</TableCell>\n            <TableCell align=\"center\">Delivery Person</TableCell>\n            <TableCell align=\"center\">Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            allOrders.map( (el) => (\n              <TableRow key={el.id}>\n                <TableCell align=\"center\" scope=\"row\">\n                  {el.id}\n            \n                </TableCell>\n                <TableCell align=\"center\">\n                  {el.customer.username}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {el.date}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {el.deliveryPerson != null ? \n                  <div>\n                  {el.deliveryPerson.username}\n                </div>\n                  :\n                  <div>\n                  Unassigned\n                </div>\n                  }\n                </TableCell>\n                <TableCell align=\"center\">\n                  {el.completed ? \n                    <Button variant=\"success\" disabled>\n                      Completed\n                    </Button>\n                  :\n                    <Button variant=\"danger\" disabled>\n                      Uncompleted\n                    </Button>}\n                </TableCell>  \n              </TableRow>\n            ))\n          }\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default ManagerOrders;","import React, { useState, useEffect } from \"react\";\nimport api from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Rating from '@material-ui/lab/Rating';\nimport { Button,Form } from \"react-bootstrap\";\n\nconst CustomerOrders = () => {\n  const [allOrders, setAllOrders] = useState([]);\n  const userid = useSelector(({ user }) => user.id);\n  const [dishRating, setDishRating] = useState(2.5);\n  const [dishComment, setDishComment] = useState('');\n  const [userRating, setUserRating] = useState(2.5);\n  const [userComment, setUserComment] = useState('');\n  const history = useHistory();\n  \n  const fetchAllOrders = async () => {\n    try{\n      let {\n        data: orders\n      } = await api.get(`/orders`);\n      setAllOrders(orders);\n    }\n    catch(E){console.log(E)};\n  };\n\n  // const markDishRatedCompleted = async(orderId) => {\n  //   try{\n  //     console.log(\"post req\")\n  //     await  api.post(`/orders/dishRated/${orderId}`);\n  //   } catch(E) {console.log(E)};\n  // };\n\n  // const markDelivererRatedCompleted = async(orderId) => {\n  //   try{\n  //     console.log(\"post req\")\n  //     await api.post(`/orders/delivererRated/${orderId}`);\n  //   } catch(E) {console.log(E)};\n  // };\n\n  const markOrderCompleted = async(orderId) => {\n    try{\n      await api.post(`/orders/${orderId}`);\n      fetchAllOrders();\n    }\n    catch(E){console.log(E)};\n  };\n\n  const handleDishRatingSubmit = async(id,orderId) => {\n    try{\n      console.log(\"rating:\", parseFloat(dishRating),\"comments:\", dishComment,\"critic:\", id ,\"dish:\", id)\n      await api.post(`/rating/dishes/${id}/create`,{\n        rating: parseFloat(dishRating),\n        comments: dishComment,\n        critic: { id: userid },\n        dish: { id },\n      });\n\n      try{\n        console.log(\"post req\")\n        await  api.post(`/orders/dishRated/${orderId}`);\n      } catch(E) {console.log(E)};\n\n      fetchAllOrders();\n      history.go(0);\n    }\n    catch(E){console.log(E)};\n  };\n\n  const handleCommentChange = (e) => {\n    setDishComment(e.target.value);\n  };\n\n  const handleUserCommentChange = (e) => {\n    setUserComment(e.target.value);\n  };\n\n  const handleUserRatingSubmit = async(id,orderId) => {\n    try{\n      console.log(\"rating:\", parseFloat(userRating),\"comments:\", userComment,\"person:\", id ,\"order:\", orderId)\n\n      await api.post(`/rating/users/add`,{\n        rating: parseFloat(userRating),\n        comments: userComment,\n        person: { id },\n        order: { id : orderId }\n      });\n\n      try{\n        console.log(\"post req\")\n        await api.post(`/orders/delivererRated/${orderId}`);\n      } catch(E) {console.log(E)};\n      \n      fetchAllOrders();\n      history.go(0);\n    }\n    catch(E){console.log(E)};\n  };\n\n\n  useEffect( () =>{\n    fetchAllOrders();\n  }, []);\n\n\n  return (\n    <div style={{margin:\"auto\", textAlign:\"center\"}}>\n      {console.log(allOrders)}  \n      <h1>\n        All Placed Orders\n      </h1>\n      <Table aria-label=\"simple table\" style={{textAlign:\"center\"}} > \n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Order ID</TableCell>\n            <TableCell align=\"center\">Ordered By</TableCell>\n            <TableCell align=\"center\">Dish</TableCell>\n            <TableCell align=\"center\">Quantity</TableCell>\n            <TableCell align=\"center\">Delivery Person</TableCell>\n            <TableCell align=\"center\">Status</TableCell>\n            <TableCell align=\"center\">Rate Dish</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            allOrders.map( (el) => (\n              <TableRow key={el.id}>\n                <TableCell align=\"center\" scope=\"row\">\n                  {el.id}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {el.customer.username}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {el.dishOrders[0].dish.name}\n                </TableCell>\n                <TableCell align=\"center\">\n                  x{el.dishOrders[0].quantity}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {el.deliveryPerson == null ? \n                  <div>\n                    Unassigned\n                  </div>\n                  :\n                    <div>\n                      {el.deliveryPerson.username}\n                      {el.completed ?\n                        !el.delivererRated ? \n                          <div>\n                            <Form onSubmit={() => handleUserRatingSubmit(el.deliveryPerson.id,el.id)}> \n                              <div style={{width: \"200px\",margin:\"auto\"}}>\n                                <Form.Group>\n                                  <Form.Control value={userComment} onChange={handleUserCommentChange} required placeholder=\"Rating Comment\"/>\n                                </Form.Group>\n                                <Rating style={{marginBottom:\"10px\"}}\n                                  name=\"controlled\"\n                                  value={userRating}\n                                  required\n                                  precision={.5}\n                                  onChange={(event, newValue) => {\n                                    setUserRating(newValue);\n                                  }}\n                                />\n                              </div>\n                              <Button variant=\"primary\" type=\"submit\">\n                                Submit Rating\n                              </Button>\n                            </Form>\n                          </div>\n                        :\n                        <div>\n                          <Button variant=\"success\" disabled>\n                            Rating Submitted!\n                          </Button>\n                        </div>\n                          \n                      :\n                        <div></div>}\n                    </div>\n                     \n                    \n                  }\n                </TableCell>\n                <TableCell align=\"center\">\n                  {el.completed ? \n                    <Button variant=\"success\" disabled>\n                      Completed\n                    </Button>\n                  :\n                    <>\n                      <div style={{marginBottom:\"10px\"}}>\n                        <Button variant=\"danger\" disabled>\n                          Uncompleted\n                        </Button>\n                      </div>\n                      <div>\n                        <Button onClick={() => markOrderCompleted(el.id)} variant=\"success\">\n                          Mark As Completed\n                        </Button>\n                      </div>\n                    </>\n                  }\n                </TableCell>\n                <TableCell align=\"center\">\n                  {el.completed ?\n                    !el.dishRated ?\n                      <> \n                        <div>\n                          <Form onSubmit={() => handleDishRatingSubmit(el.dishOrders[0].dish.id, el.id)}> \n                            <div style={{width: \"200px\",margin:\"auto\"}}>\n                              <Form.Group>\n                                <Form.Control value={dishComment} onChange={handleCommentChange} required placeholder=\"Dish Comment\"/>\n                              </Form.Group>\n                              <Rating style={{marginBottom:\"10px\"}}\n                                name=\"simple-controlled\"\n                                value={dishRating}\n                                required\n                                precision={.5}\n                                onChange={(event, newValue) => {\n                                  setDishRating(newValue);\n                                }}\n                              />\n                            </div>\n                            <Button variant=\"primary\" type=\"submit\">\n                              Submit Rating\n                            </Button>\n                          </Form>\n                        </div>\n                      </>\n                    : \n                      <Button variant=\"success\" disabled>\n                        Dish Rating Submitted!\n                      </Button>\n                  :\n                    <>\n                      <Button variant=\"success\" disabled>\n                        Order Must be Complete\n                      </Button>\n                    </>\n                  }\n                </TableCell>  \n              </TableRow>\n            ))\n          }\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default CustomerOrders;\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"./../../layouts\";\nimport Home from \"./../Home\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport \"./Customer.css\";\n\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { useSelector } from \"react-redux\";\n\nfunction CustomerInfo() {\n  const [info, setInfo] = useState([]);\n  const id = useSelector(({ user }) => user.id);\n  const url = \"/users/\" + id;\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    async function loadUserInfo() {\n      const userinfo = await axios.get(url);\n      setInfo(userinfo.data);\n      return userinfo;\n    }\n    loadUserInfo();\n  }, [url]);\n\n  async function deleteAccount() {\n    try {\n      await axios.patch(\"/users\", { closed: true });\n    } catch (E) {\n      console.log(E);\n    }\n    window.location.reload();\n  }\n\n  function rand() {\n    return Math.round(Math.random() * 20) - 10;\n  }\n\n  function getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      position: \"absolute\",\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: \"2px solid #000\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));\n\n  const classes = useStyles();\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <div>\n        <h3> Are you sure you want to delete your account? </h3>\n        <span>\n          {\" \"}\n          Warning: You will lose all of your data linked with Grannys Sweets\n        </span>\n        <button className=\"delete-btn\" onClick={() => deleteAccount()}>\n          {\" \"}\n          Delete Account\n        </button>\n      </div>\n    </div>\n  );\n\n  const useStylesCard = makeStyles((theme) => ({\n    root: {\n      maxWidth: 345,\n      margin: 10,\n      padding: 10,\n    },\n  }));\n  const card_class = useStylesCard();\n\n  return (\n    <div>\n      <Card className={card_class.root}>\n        <CardHeader title=\"Change User Information\" />\n        <CardContent>\n          <p> Coming soon... </p>\n        </CardContent>\n      </Card>\n\n      <Card className={card_class.root}>\n        <CardHeader title=\"My Account Settings\" />\n        <button className=\"delete-btn\" type=\"button\" onClick={handleOpen}>\n          Delete Account\n        </button>\n        <Modal open={open} onClose={handleClose}>\n          {body}\n        </Modal>\n      </Card>\n    </div>\n  );\n}\nexport default CustomerInfo;\n","import React, { useState, useEffect } from \"react\";\nimport api from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { isEmpty } from \"lodash\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Reservations = () => {\n  const [reservationsList, setReservationsList] = useState([]);\n\n  const fetchReservations = async () => {\n    try {\n      let { data: reservs } = await api.get(`/reservations`);\n      setReservationsList(reservs);\n    } catch (E) {\n      console.log(E);\n    }\n  };\n\n  useEffect(() => {\n    fetchReservations();\n  }, []);\n\n  return (\n    <h1>\n      {console.log(reservationsList)}\n      {isEmpty(reservationsList) ? (\n        <div style={{ margin: \"auto\", textAlign: \"center\" }}>\n          No reservations made\n        </div>\n      ) : (\n        <div>\n          {reservationsList.map((el) => (\n            <Card\n              key={el.id}\n              variant=\"outlined\"\n              style={{ margin: \"10px\", width: \"400px\" }}\n            >\n              <CardContent>\n                <Typography variant=\"h3\" component=\"h2\">\n                  Table #{el.table.name}\n                </Typography>\n                <Typography variant=\"h3\" color=\"textSecondary\">\n                  From\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                  {el.timeSlot.from}\n                </Typography>\n                <Typography variant=\"h3\" color=\"textSecondary\">\n                  To\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                  {el.timeSlot.to}\n                </Typography>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      )}\n    </h1>\n  );\n};\n\nexport default Reservations;\n","import React from \"react\";\nimport Menu from \"./pages/Menu\";\nimport VIPMenu from \"./pages/VipMenu\";\nimport Chefs from \"./pages/Chefs/Chefs\";\nimport Signin from \"./pages/Signin\";\nimport Signup from \"./pages/Signup\";\nimport Home from \"./pages/Home\";\nimport Discussions from \"./pages/Discussions\";\nimport Comments from \"./pages/Comments\";\nimport Balance from \"./pages/Balance\";\nimport Dashboard from \"./pages/Employee/Home\";\nimport Jobs from \"./pages/Employee/Jobs\";\nimport TrackJob from \"./pages/Employee/InProgress\";\nimport DishForm from \"./pages/Employee/DishForm\";\nimport ChefJob from \"./pages/Employee/ChefJob\";\nimport DelivererRateCustomer from \"./pages/Employee/DelivererRateCustomer\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport UserWarningCount from \"./components/UserWarningCount\";\n\nimport Layout from \"./layouts\";\nimport Users from \"./pages/Users\";\nimport Customer from \"./pages/Customer\";\nimport Taboo from \"./pages/Taboo\";\nimport Complaints from \"./pages/Complaints\";\nimport Reviews from \"./pages/Reviews\";\nimport ManagerOrders from \"./pages/ManagerOrders\";\nimport CustomerOrders from \"./pages/CustomerOrders\";\nimport CustomerInfo from \"./pages/Customer/CustomerInfo\";\nimport Reservations from \"./pages/Reservations\";\n\nconst Routes = () => {\n  const userRole = useSelector(({ user }) => user.role);\n  return (\n    <Switch>\n      {/* Surfer Routes */}\n\n      <Route\n        exact\n        path=\"/\"\n        render={(props) => <Layout page={Home} {...props} />}\n      />\n      <Route\n        exact\n        path=\"/menu\"\n        render={(props) => <Layout page={Menu} {...props} />}\n      />\n      <Route\n        exact\n        path=\"/chefs\"\n        render={(props) => <Layout page={Chefs} {...props} />}\n      />\n      <Route\n        exact\n        path=\"/signin\"\n        render={(props) => <Layout page={Signin} {...props} />}\n      />\n      <Route\n        exact\n        path=\"/signup\"\n        render={(props) => <Layout page={Signup} {...props} />}\n      />\n\n      <Route\n        exact\n        path=\"/discussions\"\n        render={(props) => <Layout page={Discussions} {...props} />}\n      />\n\n      <Route\n        exact\n        path=\"/discussions/:id\"\n        render={(props) => <Layout page={Comments} {...props} />}\n      />\n\n      <Route\n        exact\n        path=\"/warningcount\"\n        render={(props) => <Layout page={UserWarningCount} {...props} />}\n      />\n\n      {/* Customer Routes */}\n      <Route\n        exact\n        path=\"/customer\"\n        render={(props) => (\n          <Layout isPrivate={true} type=\"authUser\" page={Customer} {...props} />\n        )}\n      />\n      <Route\n        exact\n        path=\"/customer/info\"\n        render={(props) => (\n          <Layout\n            isPrivate={true}\n            type=\"authUser\"\n            page={CustomerInfo}\n            {...props}\n          />\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/myReviews\"\n        render={(props) => (\n          <Layout isPrivate={true} type=\"authUser\" page={Reviews} {...props} />\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/customer/orders\"\n        render={(props) => (\n          <Layout\n            isPrivate={true}\n            type=\"authUser\"\n            page={CustomerOrders}\n            {...props}\n          />\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/customer/reservations\"\n        render={(props) => (\n          <Layout\n            isPrivate={true}\n            type=\"authUser\"\n            page={Reservations}\n            {...props}\n          />\n        )}\n      />\n\n      {/* Customer and Employee*/}\n      <Route\n        exact\n        path=\"/customer/balance\"\n        render={(props) => (\n          <Layout isPrivate={true} type=\"authUser\" page={Balance} {...props} />\n        )}\n      />\n\n\n      {/* VIP Routes */}\n\n      <Route\n        exact\n        path=\"/vipMenu\"\n        render={(props) => (\n          <Layout isPrivate={true} page={VIPMenu} {...props} />\n        )}\n      />\n\n      {/* Employee Routes */}\n\n      <Route\n        exact\n        path=\"/employee\"\n        render={(props) => (\n          <Layout\n            isPrivate={true}\n            type=\"authUser\"\n            page={Dashboard}\n            {...props}\n          />\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/employee/jobs\"\n        render={(props) => (\n          <Layout isPrivate={true} type=\"authUser\" page={Jobs} {...props} />\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/employee/rateCustomer\"\n        render={(props) => (\n          <Layout isPrivate={true} type=\"authUser\" page={DelivererRateCustomer} {...props} />\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/employee/currentJobs\"\n        render={(props) => (\n          <Layout isPrivate={true} type=\"authUser\" page={TrackJob} {...props} />\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/employee/createDish\"\n        render={(props) => (\n          <Layout isPrivate={true} type=\"authUser\" page={DishForm} {...props} />\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/employee/CookJobs\"\n        render={(props) => (\n          <Layout isPrivate={true} type=\"authUser\" page={ChefJob} {...props} />\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/employee/users\"\n        render={(props) => (\n          <Layout isPrivate={true} type=\"authUser\" page={Users} {...props} />\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/employee/taboo\"\n        render={(props) => (\n          <Layout isPrivate={true} type=\"authUser\" page={Taboo} {...props} />\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/employee/complaints\"\n        render={(props) => (\n          <Layout\n            isPrivate={true}\n            type=\"authUser\"\n            page={Complaints}\n            {...props}\n          />\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/employee/managerorders\"\n        render={(props) => (\n          <Layout\n            isPrivate={true}\n            type=\"authUser\"\n            page={ManagerOrders}\n            {...props}\n          />\n        )}\n      />\n\n      <Route\n        render={() => (\n          <Redirect to={userRole !== \"CUSTOMER\" ? \"/employee\" : \"/\"} />\n        )}\n      />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport Routes from \"./Routes\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nexport default () => {\n  return (\n    <Router>\n      <Routes />\n    </Router>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return { ...state, ...action.payload };\n    case \"RESET_USER\":\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from \"redux\";\nimport user from \"./user\";\n\nconst reducers = combineReducers({\n  user,\n});\n\nexport default reducers;\n","import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport reducers from \"./reducers\";\nimport promiseMiddleware from \"redux-promise\";\nimport logger from \"redux-logger\";\n\nlet middleware = [thunkMiddleware, promiseMiddleware];\nif (process.env.NODE_ENV === \"development\") {\n  middleware = [...middleware, logger];\n}\n\nconst middlewareEnhancer = applyMiddleware(...middleware);\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(middlewareEnhancer));\n\nexport default store;\n","import axios from \"axios\";\nimport { setJwtHeader } from \"./utils/jwt\";\n\nconst BACKEND = process.env.REACT_APP_BACKEND_URL;\n\nconst BACKEND_URL =\n  process.env.NODE_ENV === \"production\" ? BACKEND : `http://localhost:8080/api`;\n\nconst configAxios = (token) => {\n  axios.defaults.baseURL = BACKEND_URL;\n  setJwtHeader(token);\n};\n\nexport { BACKEND_URL, configAxios };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { configAxios } from \"./config\";\n\nconfigAxios(localStorage.jwt);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}